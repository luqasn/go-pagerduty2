// Code generated by go-swagger; DO NOT EDIT.

package priorities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetPrioritiesReader is a Reader for the GetPriorities structure.
type GetPrioritiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPrioritiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPrioritiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetPrioritiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetPrioritiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewGetPrioritiesPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetPrioritiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetPrioritiesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPrioritiesOK creates a GetPrioritiesOK with default headers values
func NewGetPrioritiesOK() *GetPrioritiesOK {
	return &GetPrioritiesOK{}
}

/*GetPrioritiesOK handles this case with default header values.

A paginated array of priorities.
*/
type GetPrioritiesOK struct {
	Payload *models.GetPrioritiesOKBody
}

func (o *GetPrioritiesOK) Error() string {
	return fmt.Sprintf("[GET /priorities][%d] getPrioritiesOK  %+v", 200, o.Payload)
}

func (o *GetPrioritiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetPrioritiesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrioritiesBadRequest creates a GetPrioritiesBadRequest with default headers values
func NewGetPrioritiesBadRequest() *GetPrioritiesBadRequest {
	return &GetPrioritiesBadRequest{}
}

/*GetPrioritiesBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetPrioritiesBadRequest struct {
	Payload *models.Error
}

func (o *GetPrioritiesBadRequest) Error() string {
	return fmt.Sprintf("[GET /priorities][%d] getPrioritiesBadRequest  %+v", 400, o.Payload)
}

func (o *GetPrioritiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrioritiesUnauthorized creates a GetPrioritiesUnauthorized with default headers values
func NewGetPrioritiesUnauthorized() *GetPrioritiesUnauthorized {
	return &GetPrioritiesUnauthorized{}
}

/*GetPrioritiesUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetPrioritiesUnauthorized struct {
	Payload *models.Error
}

func (o *GetPrioritiesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /priorities][%d] getPrioritiesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPrioritiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrioritiesPaymentRequired creates a GetPrioritiesPaymentRequired with default headers values
func NewGetPrioritiesPaymentRequired() *GetPrioritiesPaymentRequired {
	return &GetPrioritiesPaymentRequired{}
}

/*GetPrioritiesPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type GetPrioritiesPaymentRequired struct {
	Payload *models.Error
}

func (o *GetPrioritiesPaymentRequired) Error() string {
	return fmt.Sprintf("[GET /priorities][%d] getPrioritiesPaymentRequired  %+v", 402, o.Payload)
}

func (o *GetPrioritiesPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrioritiesForbidden creates a GetPrioritiesForbidden with default headers values
func NewGetPrioritiesForbidden() *GetPrioritiesForbidden {
	return &GetPrioritiesForbidden{}
}

/*GetPrioritiesForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetPrioritiesForbidden struct {
	Payload *models.Error
}

func (o *GetPrioritiesForbidden) Error() string {
	return fmt.Sprintf("[GET /priorities][%d] getPrioritiesForbidden  %+v", 403, o.Payload)
}

func (o *GetPrioritiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrioritiesTooManyRequests creates a GetPrioritiesTooManyRequests with default headers values
func NewGetPrioritiesTooManyRequests() *GetPrioritiesTooManyRequests {
	return &GetPrioritiesTooManyRequests{}
}

/*GetPrioritiesTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetPrioritiesTooManyRequests struct {
	Payload *models.Error
}

func (o *GetPrioritiesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /priorities][%d] getPrioritiesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPrioritiesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
