// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// ListContactMethodsReader is a Reader for the ListContactMethods structure.
type ListContactMethodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListContactMethodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListContactMethodsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListContactMethodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListContactMethodsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListContactMethodsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListContactMethodsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListContactMethodsOK creates a ListContactMethodsOK with default headers values
func NewListContactMethodsOK() *ListContactMethodsOK {
	return &ListContactMethodsOK{}
}

/*ListContactMethodsOK handles this case with default header values.

A list of contact methods.
*/
type ListContactMethodsOK struct {
	Payload *models.ListContactMethodsOKBody
}

func (o *ListContactMethodsOK) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods][%d] listContactMethodsOK  %+v", 200, o.Payload)
}

func (o *ListContactMethodsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListContactMethodsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListContactMethodsBadRequest creates a ListContactMethodsBadRequest with default headers values
func NewListContactMethodsBadRequest() *ListContactMethodsBadRequest {
	return &ListContactMethodsBadRequest{}
}

/*ListContactMethodsBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type ListContactMethodsBadRequest struct {
	Payload *models.Error
}

func (o *ListContactMethodsBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods][%d] listContactMethodsBadRequest  %+v", 400, o.Payload)
}

func (o *ListContactMethodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListContactMethodsUnauthorized creates a ListContactMethodsUnauthorized with default headers values
func NewListContactMethodsUnauthorized() *ListContactMethodsUnauthorized {
	return &ListContactMethodsUnauthorized{}
}

/*ListContactMethodsUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type ListContactMethodsUnauthorized struct {
	Payload *models.Error
}

func (o *ListContactMethodsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods][%d] listContactMethodsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListContactMethodsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListContactMethodsForbidden creates a ListContactMethodsForbidden with default headers values
func NewListContactMethodsForbidden() *ListContactMethodsForbidden {
	return &ListContactMethodsForbidden{}
}

/*ListContactMethodsForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type ListContactMethodsForbidden struct {
	Payload *models.Error
}

func (o *ListContactMethodsForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods][%d] listContactMethodsForbidden  %+v", 403, o.Payload)
}

func (o *ListContactMethodsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListContactMethodsTooManyRequests creates a ListContactMethodsTooManyRequests with default headers values
func NewListContactMethodsTooManyRequests() *ListContactMethodsTooManyRequests {
	return &ListContactMethodsTooManyRequests{}
}

/*ListContactMethodsTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type ListContactMethodsTooManyRequests struct {
	Payload *models.Error
}

func (o *ListContactMethodsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods][%d] listContactMethodsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListContactMethodsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
