// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PostUsersIDContactMethodsReader is a Reader for the PostUsersIDContactMethods structure.
type PostUsersIDContactMethodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsersIDContactMethodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostUsersIDContactMethodsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostUsersIDContactMethodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostUsersIDContactMethodsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostUsersIDContactMethodsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostUsersIDContactMethodsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostUsersIDContactMethodsCreated creates a PostUsersIDContactMethodsCreated with default headers values
func NewPostUsersIDContactMethodsCreated() *PostUsersIDContactMethodsCreated {
	return &PostUsersIDContactMethodsCreated{}
}

/*PostUsersIDContactMethodsCreated handles this case with default header values.

The contact method that was created.
*/
type PostUsersIDContactMethodsCreated struct {
	Payload *models.PostUsersIDContactMethodsCreatedBody
}

func (o *PostUsersIDContactMethodsCreated) Error() string {
	return fmt.Sprintf("[POST /users/{id}/contact_methods][%d] postUsersIdContactMethodsCreated  %+v", 201, o.Payload)
}

func (o *PostUsersIDContactMethodsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostUsersIDContactMethodsCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersIDContactMethodsBadRequest creates a PostUsersIDContactMethodsBadRequest with default headers values
func NewPostUsersIDContactMethodsBadRequest() *PostUsersIDContactMethodsBadRequest {
	return &PostUsersIDContactMethodsBadRequest{}
}

/*PostUsersIDContactMethodsBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type PostUsersIDContactMethodsBadRequest struct {
	Payload *models.Error
}

func (o *PostUsersIDContactMethodsBadRequest) Error() string {
	return fmt.Sprintf("[POST /users/{id}/contact_methods][%d] postUsersIdContactMethodsBadRequest  %+v", 400, o.Payload)
}

func (o *PostUsersIDContactMethodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersIDContactMethodsUnauthorized creates a PostUsersIDContactMethodsUnauthorized with default headers values
func NewPostUsersIDContactMethodsUnauthorized() *PostUsersIDContactMethodsUnauthorized {
	return &PostUsersIDContactMethodsUnauthorized{}
}

/*PostUsersIDContactMethodsUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PostUsersIDContactMethodsUnauthorized struct {
	Payload *models.Error
}

func (o *PostUsersIDContactMethodsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users/{id}/contact_methods][%d] postUsersIdContactMethodsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUsersIDContactMethodsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersIDContactMethodsForbidden creates a PostUsersIDContactMethodsForbidden with default headers values
func NewPostUsersIDContactMethodsForbidden() *PostUsersIDContactMethodsForbidden {
	return &PostUsersIDContactMethodsForbidden{}
}

/*PostUsersIDContactMethodsForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PostUsersIDContactMethodsForbidden struct {
	Payload *models.Error
}

func (o *PostUsersIDContactMethodsForbidden) Error() string {
	return fmt.Sprintf("[POST /users/{id}/contact_methods][%d] postUsersIdContactMethodsForbidden  %+v", 403, o.Payload)
}

func (o *PostUsersIDContactMethodsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersIDContactMethodsTooManyRequests creates a PostUsersIDContactMethodsTooManyRequests with default headers values
func NewPostUsersIDContactMethodsTooManyRequests() *PostUsersIDContactMethodsTooManyRequests {
	return &PostUsersIDContactMethodsTooManyRequests{}
}

/*PostUsersIDContactMethodsTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PostUsersIDContactMethodsTooManyRequests struct {
	Payload *models.Error
}

func (o *PostUsersIDContactMethodsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /users/{id}/contact_methods][%d] postUsersIdContactMethodsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostUsersIDContactMethodsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
