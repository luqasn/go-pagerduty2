// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// DeleteUsersIDNotificationRulesNotificationRuleIDReader is a Reader for the DeleteUsersIDNotificationRulesNotificationRuleID structure.
type DeleteUsersIDNotificationRulesNotificationRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUsersIDNotificationRulesNotificationRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteUsersIDNotificationRulesNotificationRuleIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteUsersIDNotificationRulesNotificationRuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteUsersIDNotificationRulesNotificationRuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteUsersIDNotificationRulesNotificationRuleIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteUsersIDNotificationRulesNotificationRuleIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteUsersIDNotificationRulesNotificationRuleIDNoContent creates a DeleteUsersIDNotificationRulesNotificationRuleIDNoContent with default headers values
func NewDeleteUsersIDNotificationRulesNotificationRuleIDNoContent() *DeleteUsersIDNotificationRulesNotificationRuleIDNoContent {
	return &DeleteUsersIDNotificationRulesNotificationRuleIDNoContent{}
}

/*DeleteUsersIDNotificationRulesNotificationRuleIDNoContent handles this case with default header values.

The notification rule was deleted successfully.
*/
type DeleteUsersIDNotificationRulesNotificationRuleIDNoContent struct {
}

func (o *DeleteUsersIDNotificationRulesNotificationRuleIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/notification_rules/{notification_rule_id}][%d] deleteUsersIdNotificationRulesNotificationRuleIdNoContent ", 204)
}

func (o *DeleteUsersIDNotificationRulesNotificationRuleIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUsersIDNotificationRulesNotificationRuleIDUnauthorized creates a DeleteUsersIDNotificationRulesNotificationRuleIDUnauthorized with default headers values
func NewDeleteUsersIDNotificationRulesNotificationRuleIDUnauthorized() *DeleteUsersIDNotificationRulesNotificationRuleIDUnauthorized {
	return &DeleteUsersIDNotificationRulesNotificationRuleIDUnauthorized{}
}

/*DeleteUsersIDNotificationRulesNotificationRuleIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type DeleteUsersIDNotificationRulesNotificationRuleIDUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteUsersIDNotificationRulesNotificationRuleIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/notification_rules/{notification_rule_id}][%d] deleteUsersIdNotificationRulesNotificationRuleIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUsersIDNotificationRulesNotificationRuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUsersIDNotificationRulesNotificationRuleIDForbidden creates a DeleteUsersIDNotificationRulesNotificationRuleIDForbidden with default headers values
func NewDeleteUsersIDNotificationRulesNotificationRuleIDForbidden() *DeleteUsersIDNotificationRulesNotificationRuleIDForbidden {
	return &DeleteUsersIDNotificationRulesNotificationRuleIDForbidden{}
}

/*DeleteUsersIDNotificationRulesNotificationRuleIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type DeleteUsersIDNotificationRulesNotificationRuleIDForbidden struct {
	Payload *models.Error
}

func (o *DeleteUsersIDNotificationRulesNotificationRuleIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/notification_rules/{notification_rule_id}][%d] deleteUsersIdNotificationRulesNotificationRuleIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUsersIDNotificationRulesNotificationRuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUsersIDNotificationRulesNotificationRuleIDNotFound creates a DeleteUsersIDNotificationRulesNotificationRuleIDNotFound with default headers values
func NewDeleteUsersIDNotificationRulesNotificationRuleIDNotFound() *DeleteUsersIDNotificationRulesNotificationRuleIDNotFound {
	return &DeleteUsersIDNotificationRulesNotificationRuleIDNotFound{}
}

/*DeleteUsersIDNotificationRulesNotificationRuleIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteUsersIDNotificationRulesNotificationRuleIDNotFound struct {
	Payload *models.Error
}

func (o *DeleteUsersIDNotificationRulesNotificationRuleIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/notification_rules/{notification_rule_id}][%d] deleteUsersIdNotificationRulesNotificationRuleIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUsersIDNotificationRulesNotificationRuleIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUsersIDNotificationRulesNotificationRuleIDTooManyRequests creates a DeleteUsersIDNotificationRulesNotificationRuleIDTooManyRequests with default headers values
func NewDeleteUsersIDNotificationRulesNotificationRuleIDTooManyRequests() *DeleteUsersIDNotificationRulesNotificationRuleIDTooManyRequests {
	return &DeleteUsersIDNotificationRulesNotificationRuleIDTooManyRequests{}
}

/*DeleteUsersIDNotificationRulesNotificationRuleIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type DeleteUsersIDNotificationRulesNotificationRuleIDTooManyRequests struct {
	Payload *models.Error
}

func (o *DeleteUsersIDNotificationRulesNotificationRuleIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}/notification_rules/{notification_rule_id}][%d] deleteUsersIdNotificationRulesNotificationRuleIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteUsersIDNotificationRulesNotificationRuleIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
