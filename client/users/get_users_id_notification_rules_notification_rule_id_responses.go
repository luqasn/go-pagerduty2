// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetUsersIDNotificationRulesNotificationRuleIDReader is a Reader for the GetUsersIDNotificationRulesNotificationRuleID structure.
type GetUsersIDNotificationRulesNotificationRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersIDNotificationRulesNotificationRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUsersIDNotificationRulesNotificationRuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetUsersIDNotificationRulesNotificationRuleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetUsersIDNotificationRulesNotificationRuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetUsersIDNotificationRulesNotificationRuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUsersIDNotificationRulesNotificationRuleIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetUsersIDNotificationRulesNotificationRuleIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUsersIDNotificationRulesNotificationRuleIDOK creates a GetUsersIDNotificationRulesNotificationRuleIDOK with default headers values
func NewGetUsersIDNotificationRulesNotificationRuleIDOK() *GetUsersIDNotificationRulesNotificationRuleIDOK {
	return &GetUsersIDNotificationRulesNotificationRuleIDOK{}
}

/*GetUsersIDNotificationRulesNotificationRuleIDOK handles this case with default header values.

The user's notification rule requested.
*/
type GetUsersIDNotificationRulesNotificationRuleIDOK struct {
	Payload *models.GetUsersIDNotificationRulesNotificationRuleIDOKBody
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDOK) Error() string {
	return fmt.Sprintf("[GET /users/{id}/notification_rules/{notification_rule_id}][%d] getUsersIdNotificationRulesNotificationRuleIdOK  %+v", 200, o.Payload)
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUsersIDNotificationRulesNotificationRuleIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDNotificationRulesNotificationRuleIDBadRequest creates a GetUsersIDNotificationRulesNotificationRuleIDBadRequest with default headers values
func NewGetUsersIDNotificationRulesNotificationRuleIDBadRequest() *GetUsersIDNotificationRulesNotificationRuleIDBadRequest {
	return &GetUsersIDNotificationRulesNotificationRuleIDBadRequest{}
}

/*GetUsersIDNotificationRulesNotificationRuleIDBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetUsersIDNotificationRulesNotificationRuleIDBadRequest struct {
	Payload *models.Error
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{id}/notification_rules/{notification_rule_id}][%d] getUsersIdNotificationRulesNotificationRuleIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDNotificationRulesNotificationRuleIDUnauthorized creates a GetUsersIDNotificationRulesNotificationRuleIDUnauthorized with default headers values
func NewGetUsersIDNotificationRulesNotificationRuleIDUnauthorized() *GetUsersIDNotificationRulesNotificationRuleIDUnauthorized {
	return &GetUsersIDNotificationRulesNotificationRuleIDUnauthorized{}
}

/*GetUsersIDNotificationRulesNotificationRuleIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetUsersIDNotificationRulesNotificationRuleIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{id}/notification_rules/{notification_rule_id}][%d] getUsersIdNotificationRulesNotificationRuleIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDNotificationRulesNotificationRuleIDForbidden creates a GetUsersIDNotificationRulesNotificationRuleIDForbidden with default headers values
func NewGetUsersIDNotificationRulesNotificationRuleIDForbidden() *GetUsersIDNotificationRulesNotificationRuleIDForbidden {
	return &GetUsersIDNotificationRulesNotificationRuleIDForbidden{}
}

/*GetUsersIDNotificationRulesNotificationRuleIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetUsersIDNotificationRulesNotificationRuleIDForbidden struct {
	Payload *models.Error
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{id}/notification_rules/{notification_rule_id}][%d] getUsersIdNotificationRulesNotificationRuleIdForbidden  %+v", 403, o.Payload)
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDNotificationRulesNotificationRuleIDNotFound creates a GetUsersIDNotificationRulesNotificationRuleIDNotFound with default headers values
func NewGetUsersIDNotificationRulesNotificationRuleIDNotFound() *GetUsersIDNotificationRulesNotificationRuleIDNotFound {
	return &GetUsersIDNotificationRulesNotificationRuleIDNotFound{}
}

/*GetUsersIDNotificationRulesNotificationRuleIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetUsersIDNotificationRulesNotificationRuleIDNotFound struct {
	Payload *models.Error
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{id}/notification_rules/{notification_rule_id}][%d] getUsersIdNotificationRulesNotificationRuleIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDNotificationRulesNotificationRuleIDTooManyRequests creates a GetUsersIDNotificationRulesNotificationRuleIDTooManyRequests with default headers values
func NewGetUsersIDNotificationRulesNotificationRuleIDTooManyRequests() *GetUsersIDNotificationRulesNotificationRuleIDTooManyRequests {
	return &GetUsersIDNotificationRulesNotificationRuleIDTooManyRequests{}
}

/*GetUsersIDNotificationRulesNotificationRuleIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetUsersIDNotificationRulesNotificationRuleIDTooManyRequests struct {
	Payload *models.Error
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /users/{id}/notification_rules/{notification_rule_id}][%d] getUsersIdNotificationRulesNotificationRuleIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUsersIDNotificationRulesNotificationRuleIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
