// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetUsersIDReader is a Reader for the GetUsersID structure.
type GetUsersIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUsersIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetUsersIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetUsersIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetUsersIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUsersIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetUsersIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUsersIDOK creates a GetUsersIDOK with default headers values
func NewGetUsersIDOK() *GetUsersIDOK {
	return &GetUsersIDOK{}
}

/*GetUsersIDOK handles this case with default header values.

The user requested.
*/
type GetUsersIDOK struct {
	Payload *models.GetUsersIDOKBody
}

func (o *GetUsersIDOK) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdOK  %+v", 200, o.Payload)
}

func (o *GetUsersIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUsersIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDBadRequest creates a GetUsersIDBadRequest with default headers values
func NewGetUsersIDBadRequest() *GetUsersIDBadRequest {
	return &GetUsersIDBadRequest{}
}

/*GetUsersIDBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetUsersIDBadRequest struct {
	Payload *models.Error
}

func (o *GetUsersIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUsersIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDUnauthorized creates a GetUsersIDUnauthorized with default headers values
func NewGetUsersIDUnauthorized() *GetUsersIDUnauthorized {
	return &GetUsersIDUnauthorized{}
}

/*GetUsersIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetUsersIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetUsersIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUsersIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDForbidden creates a GetUsersIDForbidden with default headers values
func NewGetUsersIDForbidden() *GetUsersIDForbidden {
	return &GetUsersIDForbidden{}
}

/*GetUsersIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetUsersIDForbidden struct {
	Payload *models.Error
}

func (o *GetUsersIDForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdForbidden  %+v", 403, o.Payload)
}

func (o *GetUsersIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDNotFound creates a GetUsersIDNotFound with default headers values
func NewGetUsersIDNotFound() *GetUsersIDNotFound {
	return &GetUsersIDNotFound{}
}

/*GetUsersIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetUsersIDNotFound struct {
	Payload *models.Error
}

func (o *GetUsersIDNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUsersIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDTooManyRequests creates a GetUsersIDTooManyRequests with default headers values
func NewGetUsersIDTooManyRequests() *GetUsersIDTooManyRequests {
	return &GetUsersIDTooManyRequests{}
}

/*GetUsersIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetUsersIDTooManyRequests struct {
	Payload *models.Error
}

func (o *GetUsersIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] getUsersIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUsersIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
