// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetUsersIDContactMethodsContactMethodIDReader is a Reader for the GetUsersIDContactMethodsContactMethodID structure.
type GetUsersIDContactMethodsContactMethodIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersIDContactMethodsContactMethodIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUsersIDContactMethodsContactMethodIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetUsersIDContactMethodsContactMethodIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetUsersIDContactMethodsContactMethodIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetUsersIDContactMethodsContactMethodIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUsersIDContactMethodsContactMethodIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetUsersIDContactMethodsContactMethodIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUsersIDContactMethodsContactMethodIDOK creates a GetUsersIDContactMethodsContactMethodIDOK with default headers values
func NewGetUsersIDContactMethodsContactMethodIDOK() *GetUsersIDContactMethodsContactMethodIDOK {
	return &GetUsersIDContactMethodsContactMethodIDOK{}
}

/*GetUsersIDContactMethodsContactMethodIDOK handles this case with default header values.

The user's contact method requested.
*/
type GetUsersIDContactMethodsContactMethodIDOK struct {
	Payload *models.GetUsersIDContactMethodsContactMethodIDOKBody
}

func (o *GetUsersIDContactMethodsContactMethodIDOK) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods/{contact_method_id}][%d] getUsersIdContactMethodsContactMethodIdOK  %+v", 200, o.Payload)
}

func (o *GetUsersIDContactMethodsContactMethodIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUsersIDContactMethodsContactMethodIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDContactMethodsContactMethodIDBadRequest creates a GetUsersIDContactMethodsContactMethodIDBadRequest with default headers values
func NewGetUsersIDContactMethodsContactMethodIDBadRequest() *GetUsersIDContactMethodsContactMethodIDBadRequest {
	return &GetUsersIDContactMethodsContactMethodIDBadRequest{}
}

/*GetUsersIDContactMethodsContactMethodIDBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetUsersIDContactMethodsContactMethodIDBadRequest struct {
	Payload *models.Error
}

func (o *GetUsersIDContactMethodsContactMethodIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods/{contact_method_id}][%d] getUsersIdContactMethodsContactMethodIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUsersIDContactMethodsContactMethodIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDContactMethodsContactMethodIDUnauthorized creates a GetUsersIDContactMethodsContactMethodIDUnauthorized with default headers values
func NewGetUsersIDContactMethodsContactMethodIDUnauthorized() *GetUsersIDContactMethodsContactMethodIDUnauthorized {
	return &GetUsersIDContactMethodsContactMethodIDUnauthorized{}
}

/*GetUsersIDContactMethodsContactMethodIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetUsersIDContactMethodsContactMethodIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetUsersIDContactMethodsContactMethodIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods/{contact_method_id}][%d] getUsersIdContactMethodsContactMethodIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUsersIDContactMethodsContactMethodIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDContactMethodsContactMethodIDForbidden creates a GetUsersIDContactMethodsContactMethodIDForbidden with default headers values
func NewGetUsersIDContactMethodsContactMethodIDForbidden() *GetUsersIDContactMethodsContactMethodIDForbidden {
	return &GetUsersIDContactMethodsContactMethodIDForbidden{}
}

/*GetUsersIDContactMethodsContactMethodIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetUsersIDContactMethodsContactMethodIDForbidden struct {
	Payload *models.Error
}

func (o *GetUsersIDContactMethodsContactMethodIDForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods/{contact_method_id}][%d] getUsersIdContactMethodsContactMethodIdForbidden  %+v", 403, o.Payload)
}

func (o *GetUsersIDContactMethodsContactMethodIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDContactMethodsContactMethodIDNotFound creates a GetUsersIDContactMethodsContactMethodIDNotFound with default headers values
func NewGetUsersIDContactMethodsContactMethodIDNotFound() *GetUsersIDContactMethodsContactMethodIDNotFound {
	return &GetUsersIDContactMethodsContactMethodIDNotFound{}
}

/*GetUsersIDContactMethodsContactMethodIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetUsersIDContactMethodsContactMethodIDNotFound struct {
	Payload *models.Error
}

func (o *GetUsersIDContactMethodsContactMethodIDNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods/{contact_method_id}][%d] getUsersIdContactMethodsContactMethodIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUsersIDContactMethodsContactMethodIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersIDContactMethodsContactMethodIDTooManyRequests creates a GetUsersIDContactMethodsContactMethodIDTooManyRequests with default headers values
func NewGetUsersIDContactMethodsContactMethodIDTooManyRequests() *GetUsersIDContactMethodsContactMethodIDTooManyRequests {
	return &GetUsersIDContactMethodsContactMethodIDTooManyRequests{}
}

/*GetUsersIDContactMethodsContactMethodIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetUsersIDContactMethodsContactMethodIDTooManyRequests struct {
	Payload *models.Error
}

func (o *GetUsersIDContactMethodsContactMethodIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /users/{id}/contact_methods/{contact_method_id}][%d] getUsersIdContactMethodsContactMethodIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUsersIDContactMethodsContactMethodIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
