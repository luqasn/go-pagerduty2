// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PutUsersIDNotificationRulesNotificationRuleIDReader is a Reader for the PutUsersIDNotificationRulesNotificationRuleID structure.
type PutUsersIDNotificationRulesNotificationRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUsersIDNotificationRulesNotificationRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutUsersIDNotificationRulesNotificationRuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutUsersIDNotificationRulesNotificationRuleIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutUsersIDNotificationRulesNotificationRuleIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewPutUsersIDNotificationRulesNotificationRuleIDPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutUsersIDNotificationRulesNotificationRuleIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutUsersIDNotificationRulesNotificationRuleIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPutUsersIDNotificationRulesNotificationRuleIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutUsersIDNotificationRulesNotificationRuleIDOK creates a PutUsersIDNotificationRulesNotificationRuleIDOK with default headers values
func NewPutUsersIDNotificationRulesNotificationRuleIDOK() *PutUsersIDNotificationRulesNotificationRuleIDOK {
	return &PutUsersIDNotificationRulesNotificationRuleIDOK{}
}

/*PutUsersIDNotificationRulesNotificationRuleIDOK handles this case with default header values.

The user's notification rule that was updated.
*/
type PutUsersIDNotificationRulesNotificationRuleIDOK struct {
	Payload *models.PutUsersIDNotificationRulesNotificationRuleIDOKBody
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDOK) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/notification_rules/{notification_rule_id}][%d] putUsersIdNotificationRulesNotificationRuleIdOK  %+v", 200, o.Payload)
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutUsersIDNotificationRulesNotificationRuleIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUsersIDNotificationRulesNotificationRuleIDBadRequest creates a PutUsersIDNotificationRulesNotificationRuleIDBadRequest with default headers values
func NewPutUsersIDNotificationRulesNotificationRuleIDBadRequest() *PutUsersIDNotificationRulesNotificationRuleIDBadRequest {
	return &PutUsersIDNotificationRulesNotificationRuleIDBadRequest{}
}

/*PutUsersIDNotificationRulesNotificationRuleIDBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type PutUsersIDNotificationRulesNotificationRuleIDBadRequest struct {
	Payload *models.Error
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/notification_rules/{notification_rule_id}][%d] putUsersIdNotificationRulesNotificationRuleIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUsersIDNotificationRulesNotificationRuleIDUnauthorized creates a PutUsersIDNotificationRulesNotificationRuleIDUnauthorized with default headers values
func NewPutUsersIDNotificationRulesNotificationRuleIDUnauthorized() *PutUsersIDNotificationRulesNotificationRuleIDUnauthorized {
	return &PutUsersIDNotificationRulesNotificationRuleIDUnauthorized{}
}

/*PutUsersIDNotificationRulesNotificationRuleIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PutUsersIDNotificationRulesNotificationRuleIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/notification_rules/{notification_rule_id}][%d] putUsersIdNotificationRulesNotificationRuleIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUsersIDNotificationRulesNotificationRuleIDPaymentRequired creates a PutUsersIDNotificationRulesNotificationRuleIDPaymentRequired with default headers values
func NewPutUsersIDNotificationRulesNotificationRuleIDPaymentRequired() *PutUsersIDNotificationRulesNotificationRuleIDPaymentRequired {
	return &PutUsersIDNotificationRulesNotificationRuleIDPaymentRequired{}
}

/*PutUsersIDNotificationRulesNotificationRuleIDPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type PutUsersIDNotificationRulesNotificationRuleIDPaymentRequired struct {
	Payload *models.Error
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDPaymentRequired) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/notification_rules/{notification_rule_id}][%d] putUsersIdNotificationRulesNotificationRuleIdPaymentRequired  %+v", 402, o.Payload)
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUsersIDNotificationRulesNotificationRuleIDForbidden creates a PutUsersIDNotificationRulesNotificationRuleIDForbidden with default headers values
func NewPutUsersIDNotificationRulesNotificationRuleIDForbidden() *PutUsersIDNotificationRulesNotificationRuleIDForbidden {
	return &PutUsersIDNotificationRulesNotificationRuleIDForbidden{}
}

/*PutUsersIDNotificationRulesNotificationRuleIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PutUsersIDNotificationRulesNotificationRuleIDForbidden struct {
	Payload *models.Error
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/notification_rules/{notification_rule_id}][%d] putUsersIdNotificationRulesNotificationRuleIdForbidden  %+v", 403, o.Payload)
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUsersIDNotificationRulesNotificationRuleIDNotFound creates a PutUsersIDNotificationRulesNotificationRuleIDNotFound with default headers values
func NewPutUsersIDNotificationRulesNotificationRuleIDNotFound() *PutUsersIDNotificationRulesNotificationRuleIDNotFound {
	return &PutUsersIDNotificationRulesNotificationRuleIDNotFound{}
}

/*PutUsersIDNotificationRulesNotificationRuleIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutUsersIDNotificationRulesNotificationRuleIDNotFound struct {
	Payload *models.Error
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/notification_rules/{notification_rule_id}][%d] putUsersIdNotificationRulesNotificationRuleIdNotFound  %+v", 404, o.Payload)
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUsersIDNotificationRulesNotificationRuleIDTooManyRequests creates a PutUsersIDNotificationRulesNotificationRuleIDTooManyRequests with default headers values
func NewPutUsersIDNotificationRulesNotificationRuleIDTooManyRequests() *PutUsersIDNotificationRulesNotificationRuleIDTooManyRequests {
	return &PutUsersIDNotificationRulesNotificationRuleIDTooManyRequests{}
}

/*PutUsersIDNotificationRulesNotificationRuleIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PutUsersIDNotificationRulesNotificationRuleIDTooManyRequests struct {
	Payload *models.Error
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /users/{id}/notification_rules/{notification_rule_id}][%d] putUsersIdNotificationRulesNotificationRuleIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutUsersIDNotificationRulesNotificationRuleIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
