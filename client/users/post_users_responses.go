// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PostUsersReader is a Reader for the PostUsers structure.
type PostUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostUsersCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewPostUsersPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostUsersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostUsersCreated creates a PostUsersCreated with default headers values
func NewPostUsersCreated() *PostUsersCreated {
	return &PostUsersCreated{}
}

/*PostUsersCreated handles this case with default header values.

The user that was created.
*/
type PostUsersCreated struct {
	Payload *models.PostUsersCreatedBody
}

func (o *PostUsersCreated) Error() string {
	return fmt.Sprintf("[POST /users][%d] postUsersCreated  %+v", 201, o.Payload)
}

func (o *PostUsersCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostUsersCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersBadRequest creates a PostUsersBadRequest with default headers values
func NewPostUsersBadRequest() *PostUsersBadRequest {
	return &PostUsersBadRequest{}
}

/*PostUsersBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type PostUsersBadRequest struct {
	Payload *models.Error
}

func (o *PostUsersBadRequest) Error() string {
	return fmt.Sprintf("[POST /users][%d] postUsersBadRequest  %+v", 400, o.Payload)
}

func (o *PostUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersUnauthorized creates a PostUsersUnauthorized with default headers values
func NewPostUsersUnauthorized() *PostUsersUnauthorized {
	return &PostUsersUnauthorized{}
}

/*PostUsersUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PostUsersUnauthorized struct {
	Payload *models.Error
}

func (o *PostUsersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users][%d] postUsersUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersPaymentRequired creates a PostUsersPaymentRequired with default headers values
func NewPostUsersPaymentRequired() *PostUsersPaymentRequired {
	return &PostUsersPaymentRequired{}
}

/*PostUsersPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type PostUsersPaymentRequired struct {
	Payload *models.Error
}

func (o *PostUsersPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /users][%d] postUsersPaymentRequired  %+v", 402, o.Payload)
}

func (o *PostUsersPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersForbidden creates a PostUsersForbidden with default headers values
func NewPostUsersForbidden() *PostUsersForbidden {
	return &PostUsersForbidden{}
}

/*PostUsersForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PostUsersForbidden struct {
	Payload *models.Error
}

func (o *PostUsersForbidden) Error() string {
	return fmt.Sprintf("[POST /users][%d] postUsersForbidden  %+v", 403, o.Payload)
}

func (o *PostUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersTooManyRequests creates a PostUsersTooManyRequests with default headers values
func NewPostUsersTooManyRequests() *PostUsersTooManyRequests {
	return &PostUsersTooManyRequests{}
}

/*PostUsersTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PostUsersTooManyRequests struct {
	Payload *models.Error
}

func (o *PostUsersTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /users][%d] postUsersTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostUsersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
