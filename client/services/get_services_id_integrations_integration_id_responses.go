// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetServicesIDIntegrationsIntegrationIDReader is a Reader for the GetServicesIDIntegrationsIntegrationID structure.
type GetServicesIDIntegrationsIntegrationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServicesIDIntegrationsIntegrationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetServicesIDIntegrationsIntegrationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetServicesIDIntegrationsIntegrationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetServicesIDIntegrationsIntegrationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetServicesIDIntegrationsIntegrationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetServicesIDIntegrationsIntegrationIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServicesIDIntegrationsIntegrationIDOK creates a GetServicesIDIntegrationsIntegrationIDOK with default headers values
func NewGetServicesIDIntegrationsIntegrationIDOK() *GetServicesIDIntegrationsIntegrationIDOK {
	return &GetServicesIDIntegrationsIntegrationIDOK{}
}

/*GetServicesIDIntegrationsIntegrationIDOK handles this case with default header values.

The integration that was requested.
*/
type GetServicesIDIntegrationsIntegrationIDOK struct {
	Payload *models.GetServicesIDIntegrationsIntegrationIDOKBody
}

func (o *GetServicesIDIntegrationsIntegrationIDOK) Error() string {
	return fmt.Sprintf("[GET /services/{id}/integrations/{integration_id}][%d] getServicesIdIntegrationsIntegrationIdOK  %+v", 200, o.Payload)
}

func (o *GetServicesIDIntegrationsIntegrationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetServicesIDIntegrationsIntegrationIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicesIDIntegrationsIntegrationIDUnauthorized creates a GetServicesIDIntegrationsIntegrationIDUnauthorized with default headers values
func NewGetServicesIDIntegrationsIntegrationIDUnauthorized() *GetServicesIDIntegrationsIntegrationIDUnauthorized {
	return &GetServicesIDIntegrationsIntegrationIDUnauthorized{}
}

/*GetServicesIDIntegrationsIntegrationIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetServicesIDIntegrationsIntegrationIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetServicesIDIntegrationsIntegrationIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /services/{id}/integrations/{integration_id}][%d] getServicesIdIntegrationsIntegrationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetServicesIDIntegrationsIntegrationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicesIDIntegrationsIntegrationIDForbidden creates a GetServicesIDIntegrationsIntegrationIDForbidden with default headers values
func NewGetServicesIDIntegrationsIntegrationIDForbidden() *GetServicesIDIntegrationsIntegrationIDForbidden {
	return &GetServicesIDIntegrationsIntegrationIDForbidden{}
}

/*GetServicesIDIntegrationsIntegrationIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetServicesIDIntegrationsIntegrationIDForbidden struct {
	Payload *models.Error
}

func (o *GetServicesIDIntegrationsIntegrationIDForbidden) Error() string {
	return fmt.Sprintf("[GET /services/{id}/integrations/{integration_id}][%d] getServicesIdIntegrationsIntegrationIdForbidden  %+v", 403, o.Payload)
}

func (o *GetServicesIDIntegrationsIntegrationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicesIDIntegrationsIntegrationIDNotFound creates a GetServicesIDIntegrationsIntegrationIDNotFound with default headers values
func NewGetServicesIDIntegrationsIntegrationIDNotFound() *GetServicesIDIntegrationsIntegrationIDNotFound {
	return &GetServicesIDIntegrationsIntegrationIDNotFound{}
}

/*GetServicesIDIntegrationsIntegrationIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetServicesIDIntegrationsIntegrationIDNotFound struct {
	Payload *models.Error
}

func (o *GetServicesIDIntegrationsIntegrationIDNotFound) Error() string {
	return fmt.Sprintf("[GET /services/{id}/integrations/{integration_id}][%d] getServicesIdIntegrationsIntegrationIdNotFound  %+v", 404, o.Payload)
}

func (o *GetServicesIDIntegrationsIntegrationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicesIDIntegrationsIntegrationIDTooManyRequests creates a GetServicesIDIntegrationsIntegrationIDTooManyRequests with default headers values
func NewGetServicesIDIntegrationsIntegrationIDTooManyRequests() *GetServicesIDIntegrationsIntegrationIDTooManyRequests {
	return &GetServicesIDIntegrationsIntegrationIDTooManyRequests{}
}

/*GetServicesIDIntegrationsIntegrationIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetServicesIDIntegrationsIntegrationIDTooManyRequests struct {
	Payload *models.Error
}

func (o *GetServicesIDIntegrationsIntegrationIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /services/{id}/integrations/{integration_id}][%d] getServicesIdIntegrationsIntegrationIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetServicesIDIntegrationsIntegrationIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
