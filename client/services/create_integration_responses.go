// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// CreateIntegrationReader is a Reader for the CreateIntegration structure.
type CreateIntegrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateIntegrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateIntegrationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateIntegrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateIntegrationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateIntegrationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewCreateIntegrationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateIntegrationCreated creates a CreateIntegrationCreated with default headers values
func NewCreateIntegrationCreated() *CreateIntegrationCreated {
	return &CreateIntegrationCreated{}
}

/*CreateIntegrationCreated handles this case with default header values.

The integration that was created.
*/
type CreateIntegrationCreated struct {
	Payload *models.CreateIntegrationCreatedBody
}

func (o *CreateIntegrationCreated) Error() string {
	return fmt.Sprintf("[POST /services/{id}/integrations][%d] createIntegrationCreated  %+v", 201, o.Payload)
}

func (o *CreateIntegrationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateIntegrationCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIntegrationBadRequest creates a CreateIntegrationBadRequest with default headers values
func NewCreateIntegrationBadRequest() *CreateIntegrationBadRequest {
	return &CreateIntegrationBadRequest{}
}

/*CreateIntegrationBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type CreateIntegrationBadRequest struct {
	Payload *models.Error
}

func (o *CreateIntegrationBadRequest) Error() string {
	return fmt.Sprintf("[POST /services/{id}/integrations][%d] createIntegrationBadRequest  %+v", 400, o.Payload)
}

func (o *CreateIntegrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIntegrationUnauthorized creates a CreateIntegrationUnauthorized with default headers values
func NewCreateIntegrationUnauthorized() *CreateIntegrationUnauthorized {
	return &CreateIntegrationUnauthorized{}
}

/*CreateIntegrationUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type CreateIntegrationUnauthorized struct {
	Payload *models.Error
}

func (o *CreateIntegrationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /services/{id}/integrations][%d] createIntegrationUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateIntegrationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIntegrationForbidden creates a CreateIntegrationForbidden with default headers values
func NewCreateIntegrationForbidden() *CreateIntegrationForbidden {
	return &CreateIntegrationForbidden{}
}

/*CreateIntegrationForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type CreateIntegrationForbidden struct {
	Payload *models.Error
}

func (o *CreateIntegrationForbidden) Error() string {
	return fmt.Sprintf("[POST /services/{id}/integrations][%d] createIntegrationForbidden  %+v", 403, o.Payload)
}

func (o *CreateIntegrationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIntegrationTooManyRequests creates a CreateIntegrationTooManyRequests with default headers values
func NewCreateIntegrationTooManyRequests() *CreateIntegrationTooManyRequests {
	return &CreateIntegrationTooManyRequests{}
}

/*CreateIntegrationTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type CreateIntegrationTooManyRequests struct {
	Payload *models.Error
}

func (o *CreateIntegrationTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /services/{id}/integrations][%d] createIntegrationTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateIntegrationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
