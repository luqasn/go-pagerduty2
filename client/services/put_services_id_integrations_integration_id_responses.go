// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PutServicesIDIntegrationsIntegrationIDReader is a Reader for the PutServicesIDIntegrationsIntegrationID structure.
type PutServicesIDIntegrationsIntegrationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutServicesIDIntegrationsIntegrationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutServicesIDIntegrationsIntegrationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutServicesIDIntegrationsIntegrationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutServicesIDIntegrationsIntegrationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutServicesIDIntegrationsIntegrationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutServicesIDIntegrationsIntegrationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPutServicesIDIntegrationsIntegrationIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutServicesIDIntegrationsIntegrationIDOK creates a PutServicesIDIntegrationsIntegrationIDOK with default headers values
func NewPutServicesIDIntegrationsIntegrationIDOK() *PutServicesIDIntegrationsIntegrationIDOK {
	return &PutServicesIDIntegrationsIntegrationIDOK{}
}

/*PutServicesIDIntegrationsIntegrationIDOK handles this case with default header values.

The integration that was updated.
*/
type PutServicesIDIntegrationsIntegrationIDOK struct {
	Payload *models.PutServicesIDIntegrationsIntegrationIDOKBody
}

func (o *PutServicesIDIntegrationsIntegrationIDOK) Error() string {
	return fmt.Sprintf("[PUT /services/{id}/integrations/{integration_id}][%d] putServicesIdIntegrationsIntegrationIdOK  %+v", 200, o.Payload)
}

func (o *PutServicesIDIntegrationsIntegrationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutServicesIDIntegrationsIntegrationIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServicesIDIntegrationsIntegrationIDBadRequest creates a PutServicesIDIntegrationsIntegrationIDBadRequest with default headers values
func NewPutServicesIDIntegrationsIntegrationIDBadRequest() *PutServicesIDIntegrationsIntegrationIDBadRequest {
	return &PutServicesIDIntegrationsIntegrationIDBadRequest{}
}

/*PutServicesIDIntegrationsIntegrationIDBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type PutServicesIDIntegrationsIntegrationIDBadRequest struct {
	Payload *models.Error
}

func (o *PutServicesIDIntegrationsIntegrationIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /services/{id}/integrations/{integration_id}][%d] putServicesIdIntegrationsIntegrationIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutServicesIDIntegrationsIntegrationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServicesIDIntegrationsIntegrationIDUnauthorized creates a PutServicesIDIntegrationsIntegrationIDUnauthorized with default headers values
func NewPutServicesIDIntegrationsIntegrationIDUnauthorized() *PutServicesIDIntegrationsIntegrationIDUnauthorized {
	return &PutServicesIDIntegrationsIntegrationIDUnauthorized{}
}

/*PutServicesIDIntegrationsIntegrationIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PutServicesIDIntegrationsIntegrationIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutServicesIDIntegrationsIntegrationIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /services/{id}/integrations/{integration_id}][%d] putServicesIdIntegrationsIntegrationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutServicesIDIntegrationsIntegrationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServicesIDIntegrationsIntegrationIDForbidden creates a PutServicesIDIntegrationsIntegrationIDForbidden with default headers values
func NewPutServicesIDIntegrationsIntegrationIDForbidden() *PutServicesIDIntegrationsIntegrationIDForbidden {
	return &PutServicesIDIntegrationsIntegrationIDForbidden{}
}

/*PutServicesIDIntegrationsIntegrationIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PutServicesIDIntegrationsIntegrationIDForbidden struct {
	Payload *models.Error
}

func (o *PutServicesIDIntegrationsIntegrationIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /services/{id}/integrations/{integration_id}][%d] putServicesIdIntegrationsIntegrationIdForbidden  %+v", 403, o.Payload)
}

func (o *PutServicesIDIntegrationsIntegrationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServicesIDIntegrationsIntegrationIDNotFound creates a PutServicesIDIntegrationsIntegrationIDNotFound with default headers values
func NewPutServicesIDIntegrationsIntegrationIDNotFound() *PutServicesIDIntegrationsIntegrationIDNotFound {
	return &PutServicesIDIntegrationsIntegrationIDNotFound{}
}

/*PutServicesIDIntegrationsIntegrationIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutServicesIDIntegrationsIntegrationIDNotFound struct {
	Payload *models.Error
}

func (o *PutServicesIDIntegrationsIntegrationIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /services/{id}/integrations/{integration_id}][%d] putServicesIdIntegrationsIntegrationIdNotFound  %+v", 404, o.Payload)
}

func (o *PutServicesIDIntegrationsIntegrationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutServicesIDIntegrationsIntegrationIDTooManyRequests creates a PutServicesIDIntegrationsIntegrationIDTooManyRequests with default headers values
func NewPutServicesIDIntegrationsIntegrationIDTooManyRequests() *PutServicesIDIntegrationsIntegrationIDTooManyRequests {
	return &PutServicesIDIntegrationsIntegrationIDTooManyRequests{}
}

/*PutServicesIDIntegrationsIntegrationIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PutServicesIDIntegrationsIntegrationIDTooManyRequests struct {
	Payload *models.Error
}

func (o *PutServicesIDIntegrationsIntegrationIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /services/{id}/integrations/{integration_id}][%d] putServicesIdIntegrationsIntegrationIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutServicesIDIntegrationsIntegrationIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
