// Code generated by go-swagger; DO NOT EDIT.

package abilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// ListAbilitiesReader is a Reader for the ListAbilities structure.
type ListAbilitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAbilitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListAbilitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewListAbilitiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListAbilitiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListAbilitiesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListAbilitiesOK creates a ListAbilitiesOK with default headers values
func NewListAbilitiesOK() *ListAbilitiesOK {
	return &ListAbilitiesOK{}
}

/*ListAbilitiesOK handles this case with default header values.

An array of ability names.
*/
type ListAbilitiesOK struct {
	Payload *models.ListAbilitiesOKBody
}

func (o *ListAbilitiesOK) Error() string {
	return fmt.Sprintf("[GET /abilities][%d] listAbilitiesOK  %+v", 200, o.Payload)
}

func (o *ListAbilitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListAbilitiesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAbilitiesUnauthorized creates a ListAbilitiesUnauthorized with default headers values
func NewListAbilitiesUnauthorized() *ListAbilitiesUnauthorized {
	return &ListAbilitiesUnauthorized{}
}

/*ListAbilitiesUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type ListAbilitiesUnauthorized struct {
	Payload *models.Error
}

func (o *ListAbilitiesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /abilities][%d] listAbilitiesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListAbilitiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAbilitiesForbidden creates a ListAbilitiesForbidden with default headers values
func NewListAbilitiesForbidden() *ListAbilitiesForbidden {
	return &ListAbilitiesForbidden{}
}

/*ListAbilitiesForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type ListAbilitiesForbidden struct {
	Payload *models.Error
}

func (o *ListAbilitiesForbidden) Error() string {
	return fmt.Sprintf("[GET /abilities][%d] listAbilitiesForbidden  %+v", 403, o.Payload)
}

func (o *ListAbilitiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAbilitiesTooManyRequests creates a ListAbilitiesTooManyRequests with default headers values
func NewListAbilitiesTooManyRequests() *ListAbilitiesTooManyRequests {
	return &ListAbilitiesTooManyRequests{}
}

/*ListAbilitiesTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type ListAbilitiesTooManyRequests struct {
	Payload *models.Error
}

func (o *ListAbilitiesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /abilities][%d] listAbilitiesTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListAbilitiesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
