// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// DeleteTeamsIDReader is a Reader for the DeleteTeamsID structure.
type DeleteTeamsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTeamsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteTeamsIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteTeamsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewDeleteTeamsIDPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteTeamsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteTeamsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteTeamsIDNoContent creates a DeleteTeamsIDNoContent with default headers values
func NewDeleteTeamsIDNoContent() *DeleteTeamsIDNoContent {
	return &DeleteTeamsIDNoContent{}
}

/*DeleteTeamsIDNoContent handles this case with default header values.

The team was deleted successfully.
*/
type DeleteTeamsIDNoContent struct {
}

func (o *DeleteTeamsIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}][%d] deleteTeamsIdNoContent ", 204)
}

func (o *DeleteTeamsIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTeamsIDUnauthorized creates a DeleteTeamsIDUnauthorized with default headers values
func NewDeleteTeamsIDUnauthorized() *DeleteTeamsIDUnauthorized {
	return &DeleteTeamsIDUnauthorized{}
}

/*DeleteTeamsIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type DeleteTeamsIDUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteTeamsIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}][%d] deleteTeamsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTeamsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTeamsIDPaymentRequired creates a DeleteTeamsIDPaymentRequired with default headers values
func NewDeleteTeamsIDPaymentRequired() *DeleteTeamsIDPaymentRequired {
	return &DeleteTeamsIDPaymentRequired{}
}

/*DeleteTeamsIDPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type DeleteTeamsIDPaymentRequired struct {
	Payload *models.Error
}

func (o *DeleteTeamsIDPaymentRequired) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}][%d] deleteTeamsIdPaymentRequired  %+v", 402, o.Payload)
}

func (o *DeleteTeamsIDPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTeamsIDForbidden creates a DeleteTeamsIDForbidden with default headers values
func NewDeleteTeamsIDForbidden() *DeleteTeamsIDForbidden {
	return &DeleteTeamsIDForbidden{}
}

/*DeleteTeamsIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type DeleteTeamsIDForbidden struct {
	Payload *models.Error
}

func (o *DeleteTeamsIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}][%d] deleteTeamsIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTeamsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTeamsIDTooManyRequests creates a DeleteTeamsIDTooManyRequests with default headers values
func NewDeleteTeamsIDTooManyRequests() *DeleteTeamsIDTooManyRequests {
	return &DeleteTeamsIDTooManyRequests{}
}

/*DeleteTeamsIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type DeleteTeamsIDTooManyRequests struct {
	Payload *models.Error
}

func (o *DeleteTeamsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}][%d] deleteTeamsIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteTeamsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
