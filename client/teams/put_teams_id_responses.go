// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PutTeamsIDReader is a Reader for the PutTeamsID structure.
type PutTeamsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutTeamsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutTeamsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutTeamsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewPutTeamsIDPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutTeamsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutTeamsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPutTeamsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutTeamsIDOK creates a PutTeamsIDOK with default headers values
func NewPutTeamsIDOK() *PutTeamsIDOK {
	return &PutTeamsIDOK{}
}

/*PutTeamsIDOK handles this case with default header values.

The team that was updated.
*/
type PutTeamsIDOK struct {
	Payload *models.PutTeamsIDOKBody
}

func (o *PutTeamsIDOK) Error() string {
	return fmt.Sprintf("[PUT /teams/{id}][%d] putTeamsIdOK  %+v", 200, o.Payload)
}

func (o *PutTeamsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutTeamsIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTeamsIDUnauthorized creates a PutTeamsIDUnauthorized with default headers values
func NewPutTeamsIDUnauthorized() *PutTeamsIDUnauthorized {
	return &PutTeamsIDUnauthorized{}
}

/*PutTeamsIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PutTeamsIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutTeamsIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /teams/{id}][%d] putTeamsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutTeamsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTeamsIDPaymentRequired creates a PutTeamsIDPaymentRequired with default headers values
func NewPutTeamsIDPaymentRequired() *PutTeamsIDPaymentRequired {
	return &PutTeamsIDPaymentRequired{}
}

/*PutTeamsIDPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type PutTeamsIDPaymentRequired struct {
	Payload *models.Error
}

func (o *PutTeamsIDPaymentRequired) Error() string {
	return fmt.Sprintf("[PUT /teams/{id}][%d] putTeamsIdPaymentRequired  %+v", 402, o.Payload)
}

func (o *PutTeamsIDPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTeamsIDForbidden creates a PutTeamsIDForbidden with default headers values
func NewPutTeamsIDForbidden() *PutTeamsIDForbidden {
	return &PutTeamsIDForbidden{}
}

/*PutTeamsIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PutTeamsIDForbidden struct {
	Payload *models.Error
}

func (o *PutTeamsIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /teams/{id}][%d] putTeamsIdForbidden  %+v", 403, o.Payload)
}

func (o *PutTeamsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTeamsIDNotFound creates a PutTeamsIDNotFound with default headers values
func NewPutTeamsIDNotFound() *PutTeamsIDNotFound {
	return &PutTeamsIDNotFound{}
}

/*PutTeamsIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutTeamsIDNotFound struct {
	Payload *models.Error
}

func (o *PutTeamsIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /teams/{id}][%d] putTeamsIdNotFound  %+v", 404, o.Payload)
}

func (o *PutTeamsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTeamsIDTooManyRequests creates a PutTeamsIDTooManyRequests with default headers values
func NewPutTeamsIDTooManyRequests() *PutTeamsIDTooManyRequests {
	return &PutTeamsIDTooManyRequests{}
}

/*PutTeamsIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PutTeamsIDTooManyRequests struct {
	Payload *models.Error
}

func (o *PutTeamsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /teams/{id}][%d] putTeamsIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutTeamsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
