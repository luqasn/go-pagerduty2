// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// RemoveUserReader is a Reader for the RemoveUser structure.
type RemoveUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewRemoveUserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRemoveUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewRemoveUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewRemoveUserPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewRemoveUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewRemoveUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewRemoveUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveUserNoContent creates a RemoveUserNoContent with default headers values
func NewRemoveUserNoContent() *RemoveUserNoContent {
	return &RemoveUserNoContent{}
}

/*RemoveUserNoContent handles this case with default header values.

The user was removed to the team.
*/
type RemoveUserNoContent struct {
}

func (o *RemoveUserNoContent) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}/users/{user_id}][%d] removeUserNoContent ", 204)
}

func (o *RemoveUserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserBadRequest creates a RemoveUserBadRequest with default headers values
func NewRemoveUserBadRequest() *RemoveUserBadRequest {
	return &RemoveUserBadRequest{}
}

/*RemoveUserBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type RemoveUserBadRequest struct {
	Payload *models.Error
}

func (o *RemoveUserBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}/users/{user_id}][%d] removeUserBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUserUnauthorized creates a RemoveUserUnauthorized with default headers values
func NewRemoveUserUnauthorized() *RemoveUserUnauthorized {
	return &RemoveUserUnauthorized{}
}

/*RemoveUserUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type RemoveUserUnauthorized struct {
	Payload *models.Error
}

func (o *RemoveUserUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}/users/{user_id}][%d] removeUserUnauthorized  %+v", 401, o.Payload)
}

func (o *RemoveUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUserPaymentRequired creates a RemoveUserPaymentRequired with default headers values
func NewRemoveUserPaymentRequired() *RemoveUserPaymentRequired {
	return &RemoveUserPaymentRequired{}
}

/*RemoveUserPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type RemoveUserPaymentRequired struct {
	Payload *models.Error
}

func (o *RemoveUserPaymentRequired) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}/users/{user_id}][%d] removeUserPaymentRequired  %+v", 402, o.Payload)
}

func (o *RemoveUserPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUserForbidden creates a RemoveUserForbidden with default headers values
func NewRemoveUserForbidden() *RemoveUserForbidden {
	return &RemoveUserForbidden{}
}

/*RemoveUserForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type RemoveUserForbidden struct {
	Payload *models.Error
}

func (o *RemoveUserForbidden) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}/users/{user_id}][%d] removeUserForbidden  %+v", 403, o.Payload)
}

func (o *RemoveUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUserNotFound creates a RemoveUserNotFound with default headers values
func NewRemoveUserNotFound() *RemoveUserNotFound {
	return &RemoveUserNotFound{}
}

/*RemoveUserNotFound handles this case with default header values.

The requested resource was not found.
*/
type RemoveUserNotFound struct {
	Payload *models.Error
}

func (o *RemoveUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}/users/{user_id}][%d] removeUserNotFound  %+v", 404, o.Payload)
}

func (o *RemoveUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUserTooManyRequests creates a RemoveUserTooManyRequests with default headers values
func NewRemoveUserTooManyRequests() *RemoveUserTooManyRequests {
	return &RemoveUserTooManyRequests{}
}

/*RemoveUserTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type RemoveUserTooManyRequests struct {
	Payload *models.Error
}

func (o *RemoveUserTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}/users/{user_id}][%d] removeUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *RemoveUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
