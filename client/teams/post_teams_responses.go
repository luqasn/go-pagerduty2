// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PostTeamsReader is a Reader for the PostTeams structure.
type PostTeamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTeamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostTeamsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostTeamsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostTeamsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewPostTeamsPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostTeamsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostTeamsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostTeamsCreated creates a PostTeamsCreated with default headers values
func NewPostTeamsCreated() *PostTeamsCreated {
	return &PostTeamsCreated{}
}

/*PostTeamsCreated handles this case with default header values.

The team that was created.
*/
type PostTeamsCreated struct {
	Payload *models.PostTeamsCreatedBody
}

func (o *PostTeamsCreated) Error() string {
	return fmt.Sprintf("[POST /teams][%d] postTeamsCreated  %+v", 201, o.Payload)
}

func (o *PostTeamsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostTeamsCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamsBadRequest creates a PostTeamsBadRequest with default headers values
func NewPostTeamsBadRequest() *PostTeamsBadRequest {
	return &PostTeamsBadRequest{}
}

/*PostTeamsBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type PostTeamsBadRequest struct {
	Payload *models.Error
}

func (o *PostTeamsBadRequest) Error() string {
	return fmt.Sprintf("[POST /teams][%d] postTeamsBadRequest  %+v", 400, o.Payload)
}

func (o *PostTeamsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamsUnauthorized creates a PostTeamsUnauthorized with default headers values
func NewPostTeamsUnauthorized() *PostTeamsUnauthorized {
	return &PostTeamsUnauthorized{}
}

/*PostTeamsUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PostTeamsUnauthorized struct {
	Payload *models.Error
}

func (o *PostTeamsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /teams][%d] postTeamsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostTeamsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamsPaymentRequired creates a PostTeamsPaymentRequired with default headers values
func NewPostTeamsPaymentRequired() *PostTeamsPaymentRequired {
	return &PostTeamsPaymentRequired{}
}

/*PostTeamsPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type PostTeamsPaymentRequired struct {
	Payload *models.Error
}

func (o *PostTeamsPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /teams][%d] postTeamsPaymentRequired  %+v", 402, o.Payload)
}

func (o *PostTeamsPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamsForbidden creates a PostTeamsForbidden with default headers values
func NewPostTeamsForbidden() *PostTeamsForbidden {
	return &PostTeamsForbidden{}
}

/*PostTeamsForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PostTeamsForbidden struct {
	Payload *models.Error
}

func (o *PostTeamsForbidden) Error() string {
	return fmt.Sprintf("[POST /teams][%d] postTeamsForbidden  %+v", 403, o.Payload)
}

func (o *PostTeamsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamsTooManyRequests creates a PostTeamsTooManyRequests with default headers values
func NewPostTeamsTooManyRequests() *PostTeamsTooManyRequests {
	return &PostTeamsTooManyRequests{}
}

/*PostTeamsTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PostTeamsTooManyRequests struct {
	Payload *models.Error
}

func (o *PostTeamsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /teams][%d] postTeamsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostTeamsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
