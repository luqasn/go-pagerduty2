// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// DeleteTeamReader is a Reader for the DeleteTeam structure.
type DeleteTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteTeamNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteTeamUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewDeleteTeamPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteTeamForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteTeamTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteTeamNoContent creates a DeleteTeamNoContent with default headers values
func NewDeleteTeamNoContent() *DeleteTeamNoContent {
	return &DeleteTeamNoContent{}
}

/*DeleteTeamNoContent handles this case with default header values.

The team was deleted successfully.
*/
type DeleteTeamNoContent struct {
}

func (o *DeleteTeamNoContent) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}][%d] deleteTeamNoContent ", 204)
}

func (o *DeleteTeamNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTeamUnauthorized creates a DeleteTeamUnauthorized with default headers values
func NewDeleteTeamUnauthorized() *DeleteTeamUnauthorized {
	return &DeleteTeamUnauthorized{}
}

/*DeleteTeamUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type DeleteTeamUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteTeamUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}][%d] deleteTeamUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTeamUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTeamPaymentRequired creates a DeleteTeamPaymentRequired with default headers values
func NewDeleteTeamPaymentRequired() *DeleteTeamPaymentRequired {
	return &DeleteTeamPaymentRequired{}
}

/*DeleteTeamPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type DeleteTeamPaymentRequired struct {
	Payload *models.Error
}

func (o *DeleteTeamPaymentRequired) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}][%d] deleteTeamPaymentRequired  %+v", 402, o.Payload)
}

func (o *DeleteTeamPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTeamForbidden creates a DeleteTeamForbidden with default headers values
func NewDeleteTeamForbidden() *DeleteTeamForbidden {
	return &DeleteTeamForbidden{}
}

/*DeleteTeamForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type DeleteTeamForbidden struct {
	Payload *models.Error
}

func (o *DeleteTeamForbidden) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}][%d] deleteTeamForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTeamForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTeamTooManyRequests creates a DeleteTeamTooManyRequests with default headers values
func NewDeleteTeamTooManyRequests() *DeleteTeamTooManyRequests {
	return &DeleteTeamTooManyRequests{}
}

/*DeleteTeamTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type DeleteTeamTooManyRequests struct {
	Payload *models.Error
}

func (o *DeleteTeamTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /teams/{id}][%d] deleteTeamTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteTeamTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
