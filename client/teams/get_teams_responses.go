// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetTeamsReader is a Reader for the GetTeams structure.
type GetTeamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTeamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetTeamsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetTeamsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewGetTeamsPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetTeamsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetTeamsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTeamsOK creates a GetTeamsOK with default headers values
func NewGetTeamsOK() *GetTeamsOK {
	return &GetTeamsOK{}
}

/*GetTeamsOK handles this case with default header values.

A paginated array of teams.
*/
type GetTeamsOK struct {
	Payload *models.GetTeamsOKBody
}

func (o *GetTeamsOK) Error() string {
	return fmt.Sprintf("[GET /teams][%d] getTeamsOK  %+v", 200, o.Payload)
}

func (o *GetTeamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetTeamsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsBadRequest creates a GetTeamsBadRequest with default headers values
func NewGetTeamsBadRequest() *GetTeamsBadRequest {
	return &GetTeamsBadRequest{}
}

/*GetTeamsBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetTeamsBadRequest struct {
	Payload *models.Error
}

func (o *GetTeamsBadRequest) Error() string {
	return fmt.Sprintf("[GET /teams][%d] getTeamsBadRequest  %+v", 400, o.Payload)
}

func (o *GetTeamsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsUnauthorized creates a GetTeamsUnauthorized with default headers values
func NewGetTeamsUnauthorized() *GetTeamsUnauthorized {
	return &GetTeamsUnauthorized{}
}

/*GetTeamsUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetTeamsUnauthorized struct {
	Payload *models.Error
}

func (o *GetTeamsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /teams][%d] getTeamsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTeamsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsPaymentRequired creates a GetTeamsPaymentRequired with default headers values
func NewGetTeamsPaymentRequired() *GetTeamsPaymentRequired {
	return &GetTeamsPaymentRequired{}
}

/*GetTeamsPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type GetTeamsPaymentRequired struct {
	Payload *models.Error
}

func (o *GetTeamsPaymentRequired) Error() string {
	return fmt.Sprintf("[GET /teams][%d] getTeamsPaymentRequired  %+v", 402, o.Payload)
}

func (o *GetTeamsPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsForbidden creates a GetTeamsForbidden with default headers values
func NewGetTeamsForbidden() *GetTeamsForbidden {
	return &GetTeamsForbidden{}
}

/*GetTeamsForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetTeamsForbidden struct {
	Payload *models.Error
}

func (o *GetTeamsForbidden) Error() string {
	return fmt.Sprintf("[GET /teams][%d] getTeamsForbidden  %+v", 403, o.Payload)
}

func (o *GetTeamsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsTooManyRequests creates a GetTeamsTooManyRequests with default headers values
func NewGetTeamsTooManyRequests() *GetTeamsTooManyRequests {
	return &GetTeamsTooManyRequests{}
}

/*GetTeamsTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetTeamsTooManyRequests struct {
	Payload *models.Error
}

func (o *GetTeamsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /teams][%d] getTeamsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTeamsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
