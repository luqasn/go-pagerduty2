// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// CreateNoteReader is a Reader for the CreateNote structure.
type CreateNoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateNoteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateNoteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateNoteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateNoteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateNoteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewCreateNoteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateNoteOK creates a CreateNoteOK with default headers values
func NewCreateNoteOK() *CreateNoteOK {
	return &CreateNoteOK{}
}

/*CreateNoteOK handles this case with default header values.

The new note.
*/
type CreateNoteOK struct {
	Payload *models.CreateNoteOKBody
}

func (o *CreateNoteOK) Error() string {
	return fmt.Sprintf("[POST /incidents/{id}/notes][%d] createNoteOK  %+v", 200, o.Payload)
}

func (o *CreateNoteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateNoteOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNoteBadRequest creates a CreateNoteBadRequest with default headers values
func NewCreateNoteBadRequest() *CreateNoteBadRequest {
	return &CreateNoteBadRequest{}
}

/*CreateNoteBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type CreateNoteBadRequest struct {
	Payload *models.Error
}

func (o *CreateNoteBadRequest) Error() string {
	return fmt.Sprintf("[POST /incidents/{id}/notes][%d] createNoteBadRequest  %+v", 400, o.Payload)
}

func (o *CreateNoteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNoteUnauthorized creates a CreateNoteUnauthorized with default headers values
func NewCreateNoteUnauthorized() *CreateNoteUnauthorized {
	return &CreateNoteUnauthorized{}
}

/*CreateNoteUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type CreateNoteUnauthorized struct {
	Payload *models.Error
}

func (o *CreateNoteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /incidents/{id}/notes][%d] createNoteUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateNoteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNoteForbidden creates a CreateNoteForbidden with default headers values
func NewCreateNoteForbidden() *CreateNoteForbidden {
	return &CreateNoteForbidden{}
}

/*CreateNoteForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type CreateNoteForbidden struct {
	Payload *models.Error
}

func (o *CreateNoteForbidden) Error() string {
	return fmt.Sprintf("[POST /incidents/{id}/notes][%d] createNoteForbidden  %+v", 403, o.Payload)
}

func (o *CreateNoteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNoteNotFound creates a CreateNoteNotFound with default headers values
func NewCreateNoteNotFound() *CreateNoteNotFound {
	return &CreateNoteNotFound{}
}

/*CreateNoteNotFound handles this case with default header values.

The requested resource was not found.
*/
type CreateNoteNotFound struct {
	Payload *models.Error
}

func (o *CreateNoteNotFound) Error() string {
	return fmt.Sprintf("[POST /incidents/{id}/notes][%d] createNoteNotFound  %+v", 404, o.Payload)
}

func (o *CreateNoteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNoteTooManyRequests creates a CreateNoteTooManyRequests with default headers values
func NewCreateNoteTooManyRequests() *CreateNoteTooManyRequests {
	return &CreateNoteTooManyRequests{}
}

/*CreateNoteTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type CreateNoteTooManyRequests struct {
	Payload *models.Error
}

func (o *CreateNoteTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /incidents/{id}/notes][%d] createNoteTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateNoteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
