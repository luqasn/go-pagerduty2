// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// ListNotesReader is a Reader for the ListNotes structure.
type ListNotesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListNotesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListNotesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListNotesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListNotesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListNotesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListNotesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListNotesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListNotesOK creates a ListNotesOK with default headers values
func NewListNotesOK() *ListNotesOK {
	return &ListNotesOK{}
}

/*ListNotesOK handles this case with default header values.

An array of notes.
*/
type ListNotesOK struct {
	Payload *models.ListNotesOKBody
}

func (o *ListNotesOK) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/notes][%d] listNotesOK  %+v", 200, o.Payload)
}

func (o *ListNotesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListNotesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNotesBadRequest creates a ListNotesBadRequest with default headers values
func NewListNotesBadRequest() *ListNotesBadRequest {
	return &ListNotesBadRequest{}
}

/*ListNotesBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type ListNotesBadRequest struct {
	Payload *models.Error
}

func (o *ListNotesBadRequest) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/notes][%d] listNotesBadRequest  %+v", 400, o.Payload)
}

func (o *ListNotesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNotesUnauthorized creates a ListNotesUnauthorized with default headers values
func NewListNotesUnauthorized() *ListNotesUnauthorized {
	return &ListNotesUnauthorized{}
}

/*ListNotesUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type ListNotesUnauthorized struct {
	Payload *models.Error
}

func (o *ListNotesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/notes][%d] listNotesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListNotesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNotesForbidden creates a ListNotesForbidden with default headers values
func NewListNotesForbidden() *ListNotesForbidden {
	return &ListNotesForbidden{}
}

/*ListNotesForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type ListNotesForbidden struct {
	Payload *models.Error
}

func (o *ListNotesForbidden) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/notes][%d] listNotesForbidden  %+v", 403, o.Payload)
}

func (o *ListNotesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNotesNotFound creates a ListNotesNotFound with default headers values
func NewListNotesNotFound() *ListNotesNotFound {
	return &ListNotesNotFound{}
}

/*ListNotesNotFound handles this case with default header values.

The requested resource was not found.
*/
type ListNotesNotFound struct {
	Payload *models.Error
}

func (o *ListNotesNotFound) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/notes][%d] listNotesNotFound  %+v", 404, o.Payload)
}

func (o *ListNotesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNotesTooManyRequests creates a ListNotesTooManyRequests with default headers values
func NewListNotesTooManyRequests() *ListNotesTooManyRequests {
	return &ListNotesTooManyRequests{}
}

/*ListNotesTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type ListNotesTooManyRequests struct {
	Payload *models.Error
}

func (o *ListNotesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/notes][%d] listNotesTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListNotesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
