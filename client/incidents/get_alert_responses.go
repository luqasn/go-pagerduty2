// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetAlertReader is a Reader for the GetAlert structure.
type GetAlertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAlertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAlertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAlertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetAlertUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAlertForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAlertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetAlertTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAlertOK creates a GetAlertOK with default headers values
func NewGetAlertOK() *GetAlertOK {
	return &GetAlertOK{}
}

/*GetAlertOK handles this case with default header values.

The alert requested.
*/
type GetAlertOK struct {
	Payload *models.GetAlertOKBody
}

func (o *GetAlertOK) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/alerts/{alert_id}/][%d] getAlertOK  %+v", 200, o.Payload)
}

func (o *GetAlertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetAlertOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertBadRequest creates a GetAlertBadRequest with default headers values
func NewGetAlertBadRequest() *GetAlertBadRequest {
	return &GetAlertBadRequest{}
}

/*GetAlertBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetAlertBadRequest struct {
	Payload *models.Error
}

func (o *GetAlertBadRequest) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/alerts/{alert_id}/][%d] getAlertBadRequest  %+v", 400, o.Payload)
}

func (o *GetAlertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertUnauthorized creates a GetAlertUnauthorized with default headers values
func NewGetAlertUnauthorized() *GetAlertUnauthorized {
	return &GetAlertUnauthorized{}
}

/*GetAlertUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetAlertUnauthorized struct {
	Payload *models.Error
}

func (o *GetAlertUnauthorized) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/alerts/{alert_id}/][%d] getAlertUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAlertUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertForbidden creates a GetAlertForbidden with default headers values
func NewGetAlertForbidden() *GetAlertForbidden {
	return &GetAlertForbidden{}
}

/*GetAlertForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetAlertForbidden struct {
	Payload *models.Error
}

func (o *GetAlertForbidden) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/alerts/{alert_id}/][%d] getAlertForbidden  %+v", 403, o.Payload)
}

func (o *GetAlertForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotFound creates a GetAlertNotFound with default headers values
func NewGetAlertNotFound() *GetAlertNotFound {
	return &GetAlertNotFound{}
}

/*GetAlertNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetAlertNotFound struct {
	Payload *models.Error
}

func (o *GetAlertNotFound) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/alerts/{alert_id}/][%d] getAlertNotFound  %+v", 404, o.Payload)
}

func (o *GetAlertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertTooManyRequests creates a GetAlertTooManyRequests with default headers values
func NewGetAlertTooManyRequests() *GetAlertTooManyRequests {
	return &GetAlertTooManyRequests{}
}

/*GetAlertTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetAlertTooManyRequests struct {
	Payload *models.Error
}

func (o *GetAlertTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/alerts/{alert_id}/][%d] getAlertTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAlertTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
