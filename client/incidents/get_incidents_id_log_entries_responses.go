// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetIncidentsIDLogEntriesReader is a Reader for the GetIncidentsIDLogEntries structure.
type GetIncidentsIDLogEntriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIncidentsIDLogEntriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetIncidentsIDLogEntriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetIncidentsIDLogEntriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetIncidentsIDLogEntriesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetIncidentsIDLogEntriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetIncidentsIDLogEntriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetIncidentsIDLogEntriesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIncidentsIDLogEntriesOK creates a GetIncidentsIDLogEntriesOK with default headers values
func NewGetIncidentsIDLogEntriesOK() *GetIncidentsIDLogEntriesOK {
	return &GetIncidentsIDLogEntriesOK{}
}

/*GetIncidentsIDLogEntriesOK handles this case with default header values.

A paginated array of the incident's log entries.
*/
type GetIncidentsIDLogEntriesOK struct {
	Payload *models.GetIncidentsIDLogEntriesOKBody
}

func (o *GetIncidentsIDLogEntriesOK) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/log_entries][%d] getIncidentsIdLogEntriesOK  %+v", 200, o.Payload)
}

func (o *GetIncidentsIDLogEntriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetIncidentsIDLogEntriesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIncidentsIDLogEntriesBadRequest creates a GetIncidentsIDLogEntriesBadRequest with default headers values
func NewGetIncidentsIDLogEntriesBadRequest() *GetIncidentsIDLogEntriesBadRequest {
	return &GetIncidentsIDLogEntriesBadRequest{}
}

/*GetIncidentsIDLogEntriesBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetIncidentsIDLogEntriesBadRequest struct {
	Payload *models.Error
}

func (o *GetIncidentsIDLogEntriesBadRequest) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/log_entries][%d] getIncidentsIdLogEntriesBadRequest  %+v", 400, o.Payload)
}

func (o *GetIncidentsIDLogEntriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIncidentsIDLogEntriesUnauthorized creates a GetIncidentsIDLogEntriesUnauthorized with default headers values
func NewGetIncidentsIDLogEntriesUnauthorized() *GetIncidentsIDLogEntriesUnauthorized {
	return &GetIncidentsIDLogEntriesUnauthorized{}
}

/*GetIncidentsIDLogEntriesUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetIncidentsIDLogEntriesUnauthorized struct {
	Payload *models.Error
}

func (o *GetIncidentsIDLogEntriesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/log_entries][%d] getIncidentsIdLogEntriesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIncidentsIDLogEntriesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIncidentsIDLogEntriesForbidden creates a GetIncidentsIDLogEntriesForbidden with default headers values
func NewGetIncidentsIDLogEntriesForbidden() *GetIncidentsIDLogEntriesForbidden {
	return &GetIncidentsIDLogEntriesForbidden{}
}

/*GetIncidentsIDLogEntriesForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetIncidentsIDLogEntriesForbidden struct {
	Payload *models.Error
}

func (o *GetIncidentsIDLogEntriesForbidden) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/log_entries][%d] getIncidentsIdLogEntriesForbidden  %+v", 403, o.Payload)
}

func (o *GetIncidentsIDLogEntriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIncidentsIDLogEntriesNotFound creates a GetIncidentsIDLogEntriesNotFound with default headers values
func NewGetIncidentsIDLogEntriesNotFound() *GetIncidentsIDLogEntriesNotFound {
	return &GetIncidentsIDLogEntriesNotFound{}
}

/*GetIncidentsIDLogEntriesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetIncidentsIDLogEntriesNotFound struct {
	Payload *models.Error
}

func (o *GetIncidentsIDLogEntriesNotFound) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/log_entries][%d] getIncidentsIdLogEntriesNotFound  %+v", 404, o.Payload)
}

func (o *GetIncidentsIDLogEntriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIncidentsIDLogEntriesTooManyRequests creates a GetIncidentsIDLogEntriesTooManyRequests with default headers values
func NewGetIncidentsIDLogEntriesTooManyRequests() *GetIncidentsIDLogEntriesTooManyRequests {
	return &GetIncidentsIDLogEntriesTooManyRequests{}
}

/*GetIncidentsIDLogEntriesTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetIncidentsIDLogEntriesTooManyRequests struct {
	Payload *models.Error
}

func (o *GetIncidentsIDLogEntriesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /incidents/{id}/log_entries][%d] getIncidentsIdLogEntriesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIncidentsIDLogEntriesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
