// Code generated by go-swagger; DO NOT EDIT.

package on_calls

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// ListOnCallsReader is a Reader for the ListOnCalls structure.
type ListOnCallsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOnCallsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListOnCallsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListOnCallsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListOnCallsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListOnCallsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListOnCallsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListOnCallsOK creates a ListOnCallsOK with default headers values
func NewListOnCallsOK() *ListOnCallsOK {
	return &ListOnCallsOK{}
}

/*ListOnCallsOK handles this case with default header values.

A paginated array of on-call objects.
*/
type ListOnCallsOK struct {
	Payload *models.ListOnCallsOKBody
}

func (o *ListOnCallsOK) Error() string {
	return fmt.Sprintf("[GET /oncalls][%d] listOnCallsOK  %+v", 200, o.Payload)
}

func (o *ListOnCallsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListOnCallsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOnCallsBadRequest creates a ListOnCallsBadRequest with default headers values
func NewListOnCallsBadRequest() *ListOnCallsBadRequest {
	return &ListOnCallsBadRequest{}
}

/*ListOnCallsBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type ListOnCallsBadRequest struct {
	Payload *models.Error
}

func (o *ListOnCallsBadRequest) Error() string {
	return fmt.Sprintf("[GET /oncalls][%d] listOnCallsBadRequest  %+v", 400, o.Payload)
}

func (o *ListOnCallsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOnCallsUnauthorized creates a ListOnCallsUnauthorized with default headers values
func NewListOnCallsUnauthorized() *ListOnCallsUnauthorized {
	return &ListOnCallsUnauthorized{}
}

/*ListOnCallsUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type ListOnCallsUnauthorized struct {
	Payload *models.Error
}

func (o *ListOnCallsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /oncalls][%d] listOnCallsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListOnCallsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOnCallsForbidden creates a ListOnCallsForbidden with default headers values
func NewListOnCallsForbidden() *ListOnCallsForbidden {
	return &ListOnCallsForbidden{}
}

/*ListOnCallsForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type ListOnCallsForbidden struct {
	Payload *models.Error
}

func (o *ListOnCallsForbidden) Error() string {
	return fmt.Sprintf("[GET /oncalls][%d] listOnCallsForbidden  %+v", 403, o.Payload)
}

func (o *ListOnCallsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOnCallsTooManyRequests creates a ListOnCallsTooManyRequests with default headers values
func NewListOnCallsTooManyRequests() *ListOnCallsTooManyRequests {
	return &ListOnCallsTooManyRequests{}
}

/*ListOnCallsTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type ListOnCallsTooManyRequests struct {
	Payload *models.Error
}

func (o *ListOnCallsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /oncalls][%d] listOnCallsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListOnCallsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
