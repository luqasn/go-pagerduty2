// Code generated by go-swagger; DO NOT EDIT.

package log_entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetLogEntryParams creates a new GetLogEntryParams object
// with the default values initialized.
func NewGetLogEntryParams() *GetLogEntryParams {
	var (
		timeZoneDefault = string("UTC")
	)
	return &GetLogEntryParams{
		TimeZone: &timeZoneDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLogEntryParamsWithTimeout creates a new GetLogEntryParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLogEntryParamsWithTimeout(timeout time.Duration) *GetLogEntryParams {
	var (
		timeZoneDefault = string("UTC")
	)
	return &GetLogEntryParams{
		TimeZone: &timeZoneDefault,

		timeout: timeout,
	}
}

// NewGetLogEntryParamsWithContext creates a new GetLogEntryParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLogEntryParamsWithContext(ctx context.Context) *GetLogEntryParams {
	var (
		timeZoneDefault = string("UTC")
	)
	return &GetLogEntryParams{
		TimeZone: &timeZoneDefault,

		Context: ctx,
	}
}

// NewGetLogEntryParamsWithHTTPClient creates a new GetLogEntryParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLogEntryParamsWithHTTPClient(client *http.Client) *GetLogEntryParams {
	var (
		timeZoneDefault = string("UTC")
	)
	return &GetLogEntryParams{
		TimeZone:   &timeZoneDefault,
		HTTPClient: client,
	}
}

/*GetLogEntryParams contains all the parameters to send to the API endpoint
for the get log entry operation typically these are written to a http.Request
*/
type GetLogEntryParams struct {

	/*ID*/
	ID string
	/*Include
	  Array of additional details to include.

	*/
	Include []string
	/*TimeZone
	  Time zone in which dates in the result will be rendered.

	*/
	TimeZone *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get log entry params
func (o *GetLogEntryParams) WithTimeout(timeout time.Duration) *GetLogEntryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get log entry params
func (o *GetLogEntryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get log entry params
func (o *GetLogEntryParams) WithContext(ctx context.Context) *GetLogEntryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get log entry params
func (o *GetLogEntryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get log entry params
func (o *GetLogEntryParams) WithHTTPClient(client *http.Client) *GetLogEntryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get log entry params
func (o *GetLogEntryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get log entry params
func (o *GetLogEntryParams) WithID(id string) *GetLogEntryParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get log entry params
func (o *GetLogEntryParams) SetID(id string) {
	o.ID = id
}

// WithInclude adds the include to the get log entry params
func (o *GetLogEntryParams) WithInclude(include []string) *GetLogEntryParams {
	o.SetInclude(include)
	return o
}

// SetInclude adds the include to the get log entry params
func (o *GetLogEntryParams) SetInclude(include []string) {
	o.Include = include
}

// WithTimeZone adds the timeZone to the get log entry params
func (o *GetLogEntryParams) WithTimeZone(timeZone *string) *GetLogEntryParams {
	o.SetTimeZone(timeZone)
	return o
}

// SetTimeZone adds the timeZone to the get log entry params
func (o *GetLogEntryParams) SetTimeZone(timeZone *string) {
	o.TimeZone = timeZone
}

// WriteToRequest writes these params to a swagger request
func (o *GetLogEntryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	valuesInclude := o.Include

	joinedInclude := swag.JoinByFormat(valuesInclude, "multi")
	// query array param include[]
	if err := r.SetQueryParam("include[]", joinedInclude...); err != nil {
		return err
	}

	if o.TimeZone != nil {

		// query param time_zone
		var qrTimeZone string
		if o.TimeZone != nil {
			qrTimeZone = *o.TimeZone
		}
		qTimeZone := qrTimeZone
		if qTimeZone != "" {
			if err := r.SetQueryParam("time_zone", qTimeZone); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
