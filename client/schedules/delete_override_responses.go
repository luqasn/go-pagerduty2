// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// DeleteOverrideReader is a Reader for the DeleteOverride structure.
type DeleteOverrideReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOverrideReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteOverrideOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteOverrideNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteOverrideUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteOverrideForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteOverrideNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteOverrideTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteOverrideOK creates a DeleteOverrideOK with default headers values
func NewDeleteOverrideOK() *DeleteOverrideOK {
	return &DeleteOverrideOK{}
}

/*DeleteOverrideOK handles this case with default header values.

The override was truncated.
*/
type DeleteOverrideOK struct {
}

func (o *DeleteOverrideOK) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}/overrides/{override_id}][%d] deleteOverrideOK ", 200)
}

func (o *DeleteOverrideOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteOverrideNoContent creates a DeleteOverrideNoContent with default headers values
func NewDeleteOverrideNoContent() *DeleteOverrideNoContent {
	return &DeleteOverrideNoContent{}
}

/*DeleteOverrideNoContent handles this case with default header values.

The override was deleted successfully.
*/
type DeleteOverrideNoContent struct {
}

func (o *DeleteOverrideNoContent) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}/overrides/{override_id}][%d] deleteOverrideNoContent ", 204)
}

func (o *DeleteOverrideNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteOverrideUnauthorized creates a DeleteOverrideUnauthorized with default headers values
func NewDeleteOverrideUnauthorized() *DeleteOverrideUnauthorized {
	return &DeleteOverrideUnauthorized{}
}

/*DeleteOverrideUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type DeleteOverrideUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteOverrideUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}/overrides/{override_id}][%d] deleteOverrideUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteOverrideUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOverrideForbidden creates a DeleteOverrideForbidden with default headers values
func NewDeleteOverrideForbidden() *DeleteOverrideForbidden {
	return &DeleteOverrideForbidden{}
}

/*DeleteOverrideForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type DeleteOverrideForbidden struct {
	Payload *models.Error
}

func (o *DeleteOverrideForbidden) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}/overrides/{override_id}][%d] deleteOverrideForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOverrideForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOverrideNotFound creates a DeleteOverrideNotFound with default headers values
func NewDeleteOverrideNotFound() *DeleteOverrideNotFound {
	return &DeleteOverrideNotFound{}
}

/*DeleteOverrideNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteOverrideNotFound struct {
	Payload *models.Error
}

func (o *DeleteOverrideNotFound) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}/overrides/{override_id}][%d] deleteOverrideNotFound  %+v", 404, o.Payload)
}

func (o *DeleteOverrideNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOverrideTooManyRequests creates a DeleteOverrideTooManyRequests with default headers values
func NewDeleteOverrideTooManyRequests() *DeleteOverrideTooManyRequests {
	return &DeleteOverrideTooManyRequests{}
}

/*DeleteOverrideTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type DeleteOverrideTooManyRequests struct {
	Payload *models.Error
}

func (o *DeleteOverrideTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}/overrides/{override_id}][%d] deleteOverrideTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteOverrideTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
