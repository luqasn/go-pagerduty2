// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetSchedulesIDReader is a Reader for the GetSchedulesID structure.
type GetSchedulesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchedulesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSchedulesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSchedulesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSchedulesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSchedulesIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSchedulesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetSchedulesIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSchedulesIDOK creates a GetSchedulesIDOK with default headers values
func NewGetSchedulesIDOK() *GetSchedulesIDOK {
	return &GetSchedulesIDOK{}
}

/*GetSchedulesIDOK handles this case with default header values.

The schedule object.
*/
type GetSchedulesIDOK struct {
	Payload *models.GetSchedulesIDOKBody
}

func (o *GetSchedulesIDOK) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}][%d] getSchedulesIdOK  %+v", 200, o.Payload)
}

func (o *GetSchedulesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSchedulesIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDBadRequest creates a GetSchedulesIDBadRequest with default headers values
func NewGetSchedulesIDBadRequest() *GetSchedulesIDBadRequest {
	return &GetSchedulesIDBadRequest{}
}

/*GetSchedulesIDBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetSchedulesIDBadRequest struct {
	Payload *models.Error
}

func (o *GetSchedulesIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}][%d] getSchedulesIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetSchedulesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDUnauthorized creates a GetSchedulesIDUnauthorized with default headers values
func NewGetSchedulesIDUnauthorized() *GetSchedulesIDUnauthorized {
	return &GetSchedulesIDUnauthorized{}
}

/*GetSchedulesIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetSchedulesIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetSchedulesIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}][%d] getSchedulesIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSchedulesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDForbidden creates a GetSchedulesIDForbidden with default headers values
func NewGetSchedulesIDForbidden() *GetSchedulesIDForbidden {
	return &GetSchedulesIDForbidden{}
}

/*GetSchedulesIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetSchedulesIDForbidden struct {
	Payload *models.Error
}

func (o *GetSchedulesIDForbidden) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}][%d] getSchedulesIdForbidden  %+v", 403, o.Payload)
}

func (o *GetSchedulesIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDNotFound creates a GetSchedulesIDNotFound with default headers values
func NewGetSchedulesIDNotFound() *GetSchedulesIDNotFound {
	return &GetSchedulesIDNotFound{}
}

/*GetSchedulesIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetSchedulesIDNotFound struct {
	Payload *models.Error
}

func (o *GetSchedulesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}][%d] getSchedulesIdNotFound  %+v", 404, o.Payload)
}

func (o *GetSchedulesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDTooManyRequests creates a GetSchedulesIDTooManyRequests with default headers values
func NewGetSchedulesIDTooManyRequests() *GetSchedulesIDTooManyRequests {
	return &GetSchedulesIDTooManyRequests{}
}

/*GetSchedulesIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetSchedulesIDTooManyRequests struct {
	Payload *models.Error
}

func (o *GetSchedulesIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}][%d] getSchedulesIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSchedulesIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
