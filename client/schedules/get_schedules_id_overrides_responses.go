// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetSchedulesIDOverridesReader is a Reader for the GetSchedulesIDOverrides structure.
type GetSchedulesIDOverridesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchedulesIDOverridesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSchedulesIDOverridesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSchedulesIDOverridesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSchedulesIDOverridesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSchedulesIDOverridesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSchedulesIDOverridesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetSchedulesIDOverridesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSchedulesIDOverridesOK creates a GetSchedulesIDOverridesOK with default headers values
func NewGetSchedulesIDOverridesOK() *GetSchedulesIDOverridesOK {
	return &GetSchedulesIDOverridesOK{}
}

/*GetSchedulesIDOverridesOK handles this case with default header values.

The collection of override objects returned by the query.
*/
type GetSchedulesIDOverridesOK struct {
	Payload *models.GetSchedulesIDOverridesOKBody
}

func (o *GetSchedulesIDOverridesOK) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/overrides][%d] getSchedulesIdOverridesOK  %+v", 200, o.Payload)
}

func (o *GetSchedulesIDOverridesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSchedulesIDOverridesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDOverridesBadRequest creates a GetSchedulesIDOverridesBadRequest with default headers values
func NewGetSchedulesIDOverridesBadRequest() *GetSchedulesIDOverridesBadRequest {
	return &GetSchedulesIDOverridesBadRequest{}
}

/*GetSchedulesIDOverridesBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetSchedulesIDOverridesBadRequest struct {
	Payload *models.Error
}

func (o *GetSchedulesIDOverridesBadRequest) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/overrides][%d] getSchedulesIdOverridesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSchedulesIDOverridesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDOverridesUnauthorized creates a GetSchedulesIDOverridesUnauthorized with default headers values
func NewGetSchedulesIDOverridesUnauthorized() *GetSchedulesIDOverridesUnauthorized {
	return &GetSchedulesIDOverridesUnauthorized{}
}

/*GetSchedulesIDOverridesUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetSchedulesIDOverridesUnauthorized struct {
	Payload *models.Error
}

func (o *GetSchedulesIDOverridesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/overrides][%d] getSchedulesIdOverridesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSchedulesIDOverridesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDOverridesForbidden creates a GetSchedulesIDOverridesForbidden with default headers values
func NewGetSchedulesIDOverridesForbidden() *GetSchedulesIDOverridesForbidden {
	return &GetSchedulesIDOverridesForbidden{}
}

/*GetSchedulesIDOverridesForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetSchedulesIDOverridesForbidden struct {
	Payload *models.Error
}

func (o *GetSchedulesIDOverridesForbidden) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/overrides][%d] getSchedulesIdOverridesForbidden  %+v", 403, o.Payload)
}

func (o *GetSchedulesIDOverridesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDOverridesNotFound creates a GetSchedulesIDOverridesNotFound with default headers values
func NewGetSchedulesIDOverridesNotFound() *GetSchedulesIDOverridesNotFound {
	return &GetSchedulesIDOverridesNotFound{}
}

/*GetSchedulesIDOverridesNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetSchedulesIDOverridesNotFound struct {
	Payload *models.Error
}

func (o *GetSchedulesIDOverridesNotFound) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/overrides][%d] getSchedulesIdOverridesNotFound  %+v", 404, o.Payload)
}

func (o *GetSchedulesIDOverridesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDOverridesTooManyRequests creates a GetSchedulesIDOverridesTooManyRequests with default headers values
func NewGetSchedulesIDOverridesTooManyRequests() *GetSchedulesIDOverridesTooManyRequests {
	return &GetSchedulesIDOverridesTooManyRequests{}
}

/*GetSchedulesIDOverridesTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetSchedulesIDOverridesTooManyRequests struct {
	Payload *models.Error
}

func (o *GetSchedulesIDOverridesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/overrides][%d] getSchedulesIdOverridesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSchedulesIDOverridesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
