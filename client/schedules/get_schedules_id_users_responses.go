// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetSchedulesIDUsersReader is a Reader for the GetSchedulesIDUsers structure.
type GetSchedulesIDUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchedulesIDUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSchedulesIDUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSchedulesIDUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSchedulesIDUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSchedulesIDUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSchedulesIDUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetSchedulesIDUsersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSchedulesIDUsersOK creates a GetSchedulesIDUsersOK with default headers values
func NewGetSchedulesIDUsersOK() *GetSchedulesIDUsersOK {
	return &GetSchedulesIDUsersOK{}
}

/*GetSchedulesIDUsersOK handles this case with default header values.

The users on the given schedule.
*/
type GetSchedulesIDUsersOK struct {
	Payload *models.GetSchedulesIDUsersOKBody
}

func (o *GetSchedulesIDUsersOK) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/users][%d] getSchedulesIdUsersOK  %+v", 200, o.Payload)
}

func (o *GetSchedulesIDUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSchedulesIDUsersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDUsersBadRequest creates a GetSchedulesIDUsersBadRequest with default headers values
func NewGetSchedulesIDUsersBadRequest() *GetSchedulesIDUsersBadRequest {
	return &GetSchedulesIDUsersBadRequest{}
}

/*GetSchedulesIDUsersBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetSchedulesIDUsersBadRequest struct {
	Payload *models.Error
}

func (o *GetSchedulesIDUsersBadRequest) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/users][%d] getSchedulesIdUsersBadRequest  %+v", 400, o.Payload)
}

func (o *GetSchedulesIDUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDUsersUnauthorized creates a GetSchedulesIDUsersUnauthorized with default headers values
func NewGetSchedulesIDUsersUnauthorized() *GetSchedulesIDUsersUnauthorized {
	return &GetSchedulesIDUsersUnauthorized{}
}

/*GetSchedulesIDUsersUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetSchedulesIDUsersUnauthorized struct {
	Payload *models.Error
}

func (o *GetSchedulesIDUsersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/users][%d] getSchedulesIdUsersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSchedulesIDUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDUsersForbidden creates a GetSchedulesIDUsersForbidden with default headers values
func NewGetSchedulesIDUsersForbidden() *GetSchedulesIDUsersForbidden {
	return &GetSchedulesIDUsersForbidden{}
}

/*GetSchedulesIDUsersForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetSchedulesIDUsersForbidden struct {
	Payload *models.Error
}

func (o *GetSchedulesIDUsersForbidden) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/users][%d] getSchedulesIdUsersForbidden  %+v", 403, o.Payload)
}

func (o *GetSchedulesIDUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDUsersNotFound creates a GetSchedulesIDUsersNotFound with default headers values
func NewGetSchedulesIDUsersNotFound() *GetSchedulesIDUsersNotFound {
	return &GetSchedulesIDUsersNotFound{}
}

/*GetSchedulesIDUsersNotFound handles this case with default header values.

The requested resource was not found.
*/
type GetSchedulesIDUsersNotFound struct {
	Payload *models.Error
}

func (o *GetSchedulesIDUsersNotFound) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/users][%d] getSchedulesIdUsersNotFound  %+v", 404, o.Payload)
}

func (o *GetSchedulesIDUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesIDUsersTooManyRequests creates a GetSchedulesIDUsersTooManyRequests with default headers values
func NewGetSchedulesIDUsersTooManyRequests() *GetSchedulesIDUsersTooManyRequests {
	return &GetSchedulesIDUsersTooManyRequests{}
}

/*GetSchedulesIDUsersTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetSchedulesIDUsersTooManyRequests struct {
	Payload *models.Error
}

func (o *GetSchedulesIDUsersTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /schedules/{id}/users][%d] getSchedulesIdUsersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSchedulesIDUsersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
