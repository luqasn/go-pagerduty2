// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PostSchedulesPreviewReader is a Reader for the PostSchedulesPreview structure.
type PostSchedulesPreviewReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSchedulesPreviewReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostSchedulesPreviewOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostSchedulesPreviewBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostSchedulesPreviewUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostSchedulesPreviewForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostSchedulesPreviewTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostSchedulesPreviewOK creates a PostSchedulesPreviewOK with default headers values
func NewPostSchedulesPreviewOK() *PostSchedulesPreviewOK {
	return &PostSchedulesPreviewOK{}
}

/*PostSchedulesPreviewOK handles this case with default header values.

What the schedule will look like if posted.
*/
type PostSchedulesPreviewOK struct {
	Payload *models.PostSchedulesPreviewOKBody
}

func (o *PostSchedulesPreviewOK) Error() string {
	return fmt.Sprintf("[POST /schedules/preview][%d] postSchedulesPreviewOK  %+v", 200, o.Payload)
}

func (o *PostSchedulesPreviewOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostSchedulesPreviewOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSchedulesPreviewBadRequest creates a PostSchedulesPreviewBadRequest with default headers values
func NewPostSchedulesPreviewBadRequest() *PostSchedulesPreviewBadRequest {
	return &PostSchedulesPreviewBadRequest{}
}

/*PostSchedulesPreviewBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type PostSchedulesPreviewBadRequest struct {
	Payload *models.Error
}

func (o *PostSchedulesPreviewBadRequest) Error() string {
	return fmt.Sprintf("[POST /schedules/preview][%d] postSchedulesPreviewBadRequest  %+v", 400, o.Payload)
}

func (o *PostSchedulesPreviewBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSchedulesPreviewUnauthorized creates a PostSchedulesPreviewUnauthorized with default headers values
func NewPostSchedulesPreviewUnauthorized() *PostSchedulesPreviewUnauthorized {
	return &PostSchedulesPreviewUnauthorized{}
}

/*PostSchedulesPreviewUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PostSchedulesPreviewUnauthorized struct {
	Payload *models.Error
}

func (o *PostSchedulesPreviewUnauthorized) Error() string {
	return fmt.Sprintf("[POST /schedules/preview][%d] postSchedulesPreviewUnauthorized  %+v", 401, o.Payload)
}

func (o *PostSchedulesPreviewUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSchedulesPreviewForbidden creates a PostSchedulesPreviewForbidden with default headers values
func NewPostSchedulesPreviewForbidden() *PostSchedulesPreviewForbidden {
	return &PostSchedulesPreviewForbidden{}
}

/*PostSchedulesPreviewForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PostSchedulesPreviewForbidden struct {
	Payload *models.Error
}

func (o *PostSchedulesPreviewForbidden) Error() string {
	return fmt.Sprintf("[POST /schedules/preview][%d] postSchedulesPreviewForbidden  %+v", 403, o.Payload)
}

func (o *PostSchedulesPreviewForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSchedulesPreviewTooManyRequests creates a PostSchedulesPreviewTooManyRequests with default headers values
func NewPostSchedulesPreviewTooManyRequests() *PostSchedulesPreviewTooManyRequests {
	return &PostSchedulesPreviewTooManyRequests{}
}

/*PostSchedulesPreviewTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PostSchedulesPreviewTooManyRequests struct {
	Payload *models.Error
}

func (o *PostSchedulesPreviewTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /schedules/preview][%d] postSchedulesPreviewTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostSchedulesPreviewTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
