// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// DeleteScheduleReader is a Reader for the DeleteSchedule structure.
type DeleteScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteScheduleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteScheduleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteScheduleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteScheduleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteScheduleTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteScheduleNoContent creates a DeleteScheduleNoContent with default headers values
func NewDeleteScheduleNoContent() *DeleteScheduleNoContent {
	return &DeleteScheduleNoContent{}
}

/*DeleteScheduleNoContent handles this case with default header values.

The schedule was deleted successfully.
*/
type DeleteScheduleNoContent struct {
}

func (o *DeleteScheduleNoContent) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}][%d] deleteScheduleNoContent ", 204)
}

func (o *DeleteScheduleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScheduleBadRequest creates a DeleteScheduleBadRequest with default headers values
func NewDeleteScheduleBadRequest() *DeleteScheduleBadRequest {
	return &DeleteScheduleBadRequest{}
}

/*DeleteScheduleBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type DeleteScheduleBadRequest struct {
	Payload *models.Error
}

func (o *DeleteScheduleBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}][%d] deleteScheduleBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScheduleUnauthorized creates a DeleteScheduleUnauthorized with default headers values
func NewDeleteScheduleUnauthorized() *DeleteScheduleUnauthorized {
	return &DeleteScheduleUnauthorized{}
}

/*DeleteScheduleUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type DeleteScheduleUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteScheduleUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}][%d] deleteScheduleUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteScheduleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScheduleForbidden creates a DeleteScheduleForbidden with default headers values
func NewDeleteScheduleForbidden() *DeleteScheduleForbidden {
	return &DeleteScheduleForbidden{}
}

/*DeleteScheduleForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type DeleteScheduleForbidden struct {
	Payload *models.Error
}

func (o *DeleteScheduleForbidden) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}][%d] deleteScheduleForbidden  %+v", 403, o.Payload)
}

func (o *DeleteScheduleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScheduleNotFound creates a DeleteScheduleNotFound with default headers values
func NewDeleteScheduleNotFound() *DeleteScheduleNotFound {
	return &DeleteScheduleNotFound{}
}

/*DeleteScheduleNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteScheduleNotFound struct {
	Payload *models.Error
}

func (o *DeleteScheduleNotFound) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}][%d] deleteScheduleNotFound  %+v", 404, o.Payload)
}

func (o *DeleteScheduleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScheduleTooManyRequests creates a DeleteScheduleTooManyRequests with default headers values
func NewDeleteScheduleTooManyRequests() *DeleteScheduleTooManyRequests {
	return &DeleteScheduleTooManyRequests{}
}

/*DeleteScheduleTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type DeleteScheduleTooManyRequests struct {
	Payload *models.Error
}

func (o *DeleteScheduleTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /schedules/{id}][%d] deleteScheduleTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteScheduleTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
