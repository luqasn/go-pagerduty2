// Code generated by go-swagger; DO NOT EDIT.

package maintenance_windows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// CreateMaintenanceWindowReader is a Reader for the CreateMaintenanceWindow structure.
type CreateMaintenanceWindowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateMaintenanceWindowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateMaintenanceWindowCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateMaintenanceWindowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateMaintenanceWindowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateMaintenanceWindowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewCreateMaintenanceWindowTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateMaintenanceWindowCreated creates a CreateMaintenanceWindowCreated with default headers values
func NewCreateMaintenanceWindowCreated() *CreateMaintenanceWindowCreated {
	return &CreateMaintenanceWindowCreated{}
}

/*CreateMaintenanceWindowCreated handles this case with default header values.

The maintenance window that was created.
*/
type CreateMaintenanceWindowCreated struct {
	Payload *models.CreateMaintenanceWindowCreatedBody
}

func (o *CreateMaintenanceWindowCreated) Error() string {
	return fmt.Sprintf("[POST /maintenance_windows][%d] createMaintenanceWindowCreated  %+v", 201, o.Payload)
}

func (o *CreateMaintenanceWindowCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateMaintenanceWindowCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMaintenanceWindowBadRequest creates a CreateMaintenanceWindowBadRequest with default headers values
func NewCreateMaintenanceWindowBadRequest() *CreateMaintenanceWindowBadRequest {
	return &CreateMaintenanceWindowBadRequest{}
}

/*CreateMaintenanceWindowBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type CreateMaintenanceWindowBadRequest struct {
	Payload *models.Error
}

func (o *CreateMaintenanceWindowBadRequest) Error() string {
	return fmt.Sprintf("[POST /maintenance_windows][%d] createMaintenanceWindowBadRequest  %+v", 400, o.Payload)
}

func (o *CreateMaintenanceWindowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMaintenanceWindowUnauthorized creates a CreateMaintenanceWindowUnauthorized with default headers values
func NewCreateMaintenanceWindowUnauthorized() *CreateMaintenanceWindowUnauthorized {
	return &CreateMaintenanceWindowUnauthorized{}
}

/*CreateMaintenanceWindowUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type CreateMaintenanceWindowUnauthorized struct {
	Payload *models.Error
}

func (o *CreateMaintenanceWindowUnauthorized) Error() string {
	return fmt.Sprintf("[POST /maintenance_windows][%d] createMaintenanceWindowUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateMaintenanceWindowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMaintenanceWindowForbidden creates a CreateMaintenanceWindowForbidden with default headers values
func NewCreateMaintenanceWindowForbidden() *CreateMaintenanceWindowForbidden {
	return &CreateMaintenanceWindowForbidden{}
}

/*CreateMaintenanceWindowForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type CreateMaintenanceWindowForbidden struct {
	Payload *models.Error
}

func (o *CreateMaintenanceWindowForbidden) Error() string {
	return fmt.Sprintf("[POST /maintenance_windows][%d] createMaintenanceWindowForbidden  %+v", 403, o.Payload)
}

func (o *CreateMaintenanceWindowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMaintenanceWindowTooManyRequests creates a CreateMaintenanceWindowTooManyRequests with default headers values
func NewCreateMaintenanceWindowTooManyRequests() *CreateMaintenanceWindowTooManyRequests {
	return &CreateMaintenanceWindowTooManyRequests{}
}

/*CreateMaintenanceWindowTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type CreateMaintenanceWindowTooManyRequests struct {
	Payload *models.Error
}

func (o *CreateMaintenanceWindowTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /maintenance_windows][%d] createMaintenanceWindowTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateMaintenanceWindowTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
