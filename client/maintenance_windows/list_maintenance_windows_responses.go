// Code generated by go-swagger; DO NOT EDIT.

package maintenance_windows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// ListMaintenanceWindowsReader is a Reader for the ListMaintenanceWindows structure.
type ListMaintenanceWindowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListMaintenanceWindowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListMaintenanceWindowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListMaintenanceWindowsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListMaintenanceWindowsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListMaintenanceWindowsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListMaintenanceWindowsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListMaintenanceWindowsOK creates a ListMaintenanceWindowsOK with default headers values
func NewListMaintenanceWindowsOK() *ListMaintenanceWindowsOK {
	return &ListMaintenanceWindowsOK{}
}

/*ListMaintenanceWindowsOK handles this case with default header values.

A paginated array of maintenance windows.
*/
type ListMaintenanceWindowsOK struct {
	Payload *models.ListMaintenanceWindowsOKBody
}

func (o *ListMaintenanceWindowsOK) Error() string {
	return fmt.Sprintf("[GET /maintenance_windows][%d] listMaintenanceWindowsOK  %+v", 200, o.Payload)
}

func (o *ListMaintenanceWindowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListMaintenanceWindowsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMaintenanceWindowsBadRequest creates a ListMaintenanceWindowsBadRequest with default headers values
func NewListMaintenanceWindowsBadRequest() *ListMaintenanceWindowsBadRequest {
	return &ListMaintenanceWindowsBadRequest{}
}

/*ListMaintenanceWindowsBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type ListMaintenanceWindowsBadRequest struct {
	Payload *models.Error
}

func (o *ListMaintenanceWindowsBadRequest) Error() string {
	return fmt.Sprintf("[GET /maintenance_windows][%d] listMaintenanceWindowsBadRequest  %+v", 400, o.Payload)
}

func (o *ListMaintenanceWindowsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMaintenanceWindowsUnauthorized creates a ListMaintenanceWindowsUnauthorized with default headers values
func NewListMaintenanceWindowsUnauthorized() *ListMaintenanceWindowsUnauthorized {
	return &ListMaintenanceWindowsUnauthorized{}
}

/*ListMaintenanceWindowsUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type ListMaintenanceWindowsUnauthorized struct {
	Payload *models.Error
}

func (o *ListMaintenanceWindowsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /maintenance_windows][%d] listMaintenanceWindowsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListMaintenanceWindowsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMaintenanceWindowsForbidden creates a ListMaintenanceWindowsForbidden with default headers values
func NewListMaintenanceWindowsForbidden() *ListMaintenanceWindowsForbidden {
	return &ListMaintenanceWindowsForbidden{}
}

/*ListMaintenanceWindowsForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type ListMaintenanceWindowsForbidden struct {
	Payload *models.Error
}

func (o *ListMaintenanceWindowsForbidden) Error() string {
	return fmt.Sprintf("[GET /maintenance_windows][%d] listMaintenanceWindowsForbidden  %+v", 403, o.Payload)
}

func (o *ListMaintenanceWindowsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMaintenanceWindowsTooManyRequests creates a ListMaintenanceWindowsTooManyRequests with default headers values
func NewListMaintenanceWindowsTooManyRequests() *ListMaintenanceWindowsTooManyRequests {
	return &ListMaintenanceWindowsTooManyRequests{}
}

/*ListMaintenanceWindowsTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type ListMaintenanceWindowsTooManyRequests struct {
	Payload *models.Error
}

func (o *ListMaintenanceWindowsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /maintenance_windows][%d] listMaintenanceWindowsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListMaintenanceWindowsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
