// Code generated by go-swagger; DO NOT EDIT.

package maintenance_windows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PostMaintenanceWindowsReader is a Reader for the PostMaintenanceWindows structure.
type PostMaintenanceWindowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostMaintenanceWindowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostMaintenanceWindowsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostMaintenanceWindowsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostMaintenanceWindowsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostMaintenanceWindowsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostMaintenanceWindowsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostMaintenanceWindowsCreated creates a PostMaintenanceWindowsCreated with default headers values
func NewPostMaintenanceWindowsCreated() *PostMaintenanceWindowsCreated {
	return &PostMaintenanceWindowsCreated{}
}

/*PostMaintenanceWindowsCreated handles this case with default header values.

The maintenance window that was created.
*/
type PostMaintenanceWindowsCreated struct {
	Payload *models.PostMaintenanceWindowsCreatedBody
}

func (o *PostMaintenanceWindowsCreated) Error() string {
	return fmt.Sprintf("[POST /maintenance_windows][%d] postMaintenanceWindowsCreated  %+v", 201, o.Payload)
}

func (o *PostMaintenanceWindowsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostMaintenanceWindowsCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMaintenanceWindowsBadRequest creates a PostMaintenanceWindowsBadRequest with default headers values
func NewPostMaintenanceWindowsBadRequest() *PostMaintenanceWindowsBadRequest {
	return &PostMaintenanceWindowsBadRequest{}
}

/*PostMaintenanceWindowsBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type PostMaintenanceWindowsBadRequest struct {
	Payload *models.Error
}

func (o *PostMaintenanceWindowsBadRequest) Error() string {
	return fmt.Sprintf("[POST /maintenance_windows][%d] postMaintenanceWindowsBadRequest  %+v", 400, o.Payload)
}

func (o *PostMaintenanceWindowsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMaintenanceWindowsUnauthorized creates a PostMaintenanceWindowsUnauthorized with default headers values
func NewPostMaintenanceWindowsUnauthorized() *PostMaintenanceWindowsUnauthorized {
	return &PostMaintenanceWindowsUnauthorized{}
}

/*PostMaintenanceWindowsUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PostMaintenanceWindowsUnauthorized struct {
	Payload *models.Error
}

func (o *PostMaintenanceWindowsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /maintenance_windows][%d] postMaintenanceWindowsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostMaintenanceWindowsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMaintenanceWindowsForbidden creates a PostMaintenanceWindowsForbidden with default headers values
func NewPostMaintenanceWindowsForbidden() *PostMaintenanceWindowsForbidden {
	return &PostMaintenanceWindowsForbidden{}
}

/*PostMaintenanceWindowsForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PostMaintenanceWindowsForbidden struct {
	Payload *models.Error
}

func (o *PostMaintenanceWindowsForbidden) Error() string {
	return fmt.Sprintf("[POST /maintenance_windows][%d] postMaintenanceWindowsForbidden  %+v", 403, o.Payload)
}

func (o *PostMaintenanceWindowsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMaintenanceWindowsTooManyRequests creates a PostMaintenanceWindowsTooManyRequests with default headers values
func NewPostMaintenanceWindowsTooManyRequests() *PostMaintenanceWindowsTooManyRequests {
	return &PostMaintenanceWindowsTooManyRequests{}
}

/*PostMaintenanceWindowsTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PostMaintenanceWindowsTooManyRequests struct {
	Payload *models.Error
}

func (o *PostMaintenanceWindowsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /maintenance_windows][%d] postMaintenanceWindowsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostMaintenanceWindowsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
