// Code generated by go-swagger; DO NOT EDIT.

package maintenance_windows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// DeleteMaintenanceWindowsIDReader is a Reader for the DeleteMaintenanceWindowsID structure.
type DeleteMaintenanceWindowsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteMaintenanceWindowsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteMaintenanceWindowsIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteMaintenanceWindowsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteMaintenanceWindowsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteMaintenanceWindowsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDeleteMaintenanceWindowsIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteMaintenanceWindowsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteMaintenanceWindowsIDNoContent creates a DeleteMaintenanceWindowsIDNoContent with default headers values
func NewDeleteMaintenanceWindowsIDNoContent() *DeleteMaintenanceWindowsIDNoContent {
	return &DeleteMaintenanceWindowsIDNoContent{}
}

/*DeleteMaintenanceWindowsIDNoContent handles this case with default header values.

The maintenance window was deleted successfully.
*/
type DeleteMaintenanceWindowsIDNoContent struct {
}

func (o *DeleteMaintenanceWindowsIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /maintenance_windows/{id}][%d] deleteMaintenanceWindowsIdNoContent ", 204)
}

func (o *DeleteMaintenanceWindowsIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMaintenanceWindowsIDUnauthorized creates a DeleteMaintenanceWindowsIDUnauthorized with default headers values
func NewDeleteMaintenanceWindowsIDUnauthorized() *DeleteMaintenanceWindowsIDUnauthorized {
	return &DeleteMaintenanceWindowsIDUnauthorized{}
}

/*DeleteMaintenanceWindowsIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type DeleteMaintenanceWindowsIDUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteMaintenanceWindowsIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /maintenance_windows/{id}][%d] deleteMaintenanceWindowsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteMaintenanceWindowsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMaintenanceWindowsIDForbidden creates a DeleteMaintenanceWindowsIDForbidden with default headers values
func NewDeleteMaintenanceWindowsIDForbidden() *DeleteMaintenanceWindowsIDForbidden {
	return &DeleteMaintenanceWindowsIDForbidden{}
}

/*DeleteMaintenanceWindowsIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type DeleteMaintenanceWindowsIDForbidden struct {
	Payload *models.Error
}

func (o *DeleteMaintenanceWindowsIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /maintenance_windows/{id}][%d] deleteMaintenanceWindowsIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteMaintenanceWindowsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMaintenanceWindowsIDNotFound creates a DeleteMaintenanceWindowsIDNotFound with default headers values
func NewDeleteMaintenanceWindowsIDNotFound() *DeleteMaintenanceWindowsIDNotFound {
	return &DeleteMaintenanceWindowsIDNotFound{}
}

/*DeleteMaintenanceWindowsIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteMaintenanceWindowsIDNotFound struct {
	Payload *models.Error
}

func (o *DeleteMaintenanceWindowsIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /maintenance_windows/{id}][%d] deleteMaintenanceWindowsIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteMaintenanceWindowsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMaintenanceWindowsIDMethodNotAllowed creates a DeleteMaintenanceWindowsIDMethodNotAllowed with default headers values
func NewDeleteMaintenanceWindowsIDMethodNotAllowed() *DeleteMaintenanceWindowsIDMethodNotAllowed {
	return &DeleteMaintenanceWindowsIDMethodNotAllowed{}
}

/*DeleteMaintenanceWindowsIDMethodNotAllowed handles this case with default header values.

The maintenance window can't be deleted because it has already ended.
*/
type DeleteMaintenanceWindowsIDMethodNotAllowed struct {
}

func (o *DeleteMaintenanceWindowsIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /maintenance_windows/{id}][%d] deleteMaintenanceWindowsIdMethodNotAllowed ", 405)
}

func (o *DeleteMaintenanceWindowsIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMaintenanceWindowsIDTooManyRequests creates a DeleteMaintenanceWindowsIDTooManyRequests with default headers values
func NewDeleteMaintenanceWindowsIDTooManyRequests() *DeleteMaintenanceWindowsIDTooManyRequests {
	return &DeleteMaintenanceWindowsIDTooManyRequests{}
}

/*DeleteMaintenanceWindowsIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type DeleteMaintenanceWindowsIDTooManyRequests struct {
	Payload *models.Error
}

func (o *DeleteMaintenanceWindowsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /maintenance_windows/{id}][%d] deleteMaintenanceWindowsIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteMaintenanceWindowsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
