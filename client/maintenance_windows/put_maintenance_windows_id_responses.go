// Code generated by go-swagger; DO NOT EDIT.

package maintenance_windows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PutMaintenanceWindowsIDReader is a Reader for the PutMaintenanceWindowsID structure.
type PutMaintenanceWindowsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutMaintenanceWindowsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutMaintenanceWindowsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutMaintenanceWindowsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutMaintenanceWindowsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutMaintenanceWindowsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutMaintenanceWindowsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPutMaintenanceWindowsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutMaintenanceWindowsIDOK creates a PutMaintenanceWindowsIDOK with default headers values
func NewPutMaintenanceWindowsIDOK() *PutMaintenanceWindowsIDOK {
	return &PutMaintenanceWindowsIDOK{}
}

/*PutMaintenanceWindowsIDOK handles this case with default header values.

The maintenance window that was updated.
*/
type PutMaintenanceWindowsIDOK struct {
	Payload *models.PutMaintenanceWindowsIDOKBody
}

func (o *PutMaintenanceWindowsIDOK) Error() string {
	return fmt.Sprintf("[PUT /maintenance_windows/{id}][%d] putMaintenanceWindowsIdOK  %+v", 200, o.Payload)
}

func (o *PutMaintenanceWindowsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutMaintenanceWindowsIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMaintenanceWindowsIDBadRequest creates a PutMaintenanceWindowsIDBadRequest with default headers values
func NewPutMaintenanceWindowsIDBadRequest() *PutMaintenanceWindowsIDBadRequest {
	return &PutMaintenanceWindowsIDBadRequest{}
}

/*PutMaintenanceWindowsIDBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type PutMaintenanceWindowsIDBadRequest struct {
	Payload *models.Error
}

func (o *PutMaintenanceWindowsIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /maintenance_windows/{id}][%d] putMaintenanceWindowsIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutMaintenanceWindowsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMaintenanceWindowsIDUnauthorized creates a PutMaintenanceWindowsIDUnauthorized with default headers values
func NewPutMaintenanceWindowsIDUnauthorized() *PutMaintenanceWindowsIDUnauthorized {
	return &PutMaintenanceWindowsIDUnauthorized{}
}

/*PutMaintenanceWindowsIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PutMaintenanceWindowsIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutMaintenanceWindowsIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /maintenance_windows/{id}][%d] putMaintenanceWindowsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutMaintenanceWindowsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMaintenanceWindowsIDForbidden creates a PutMaintenanceWindowsIDForbidden with default headers values
func NewPutMaintenanceWindowsIDForbidden() *PutMaintenanceWindowsIDForbidden {
	return &PutMaintenanceWindowsIDForbidden{}
}

/*PutMaintenanceWindowsIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PutMaintenanceWindowsIDForbidden struct {
	Payload *models.Error
}

func (o *PutMaintenanceWindowsIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /maintenance_windows/{id}][%d] putMaintenanceWindowsIdForbidden  %+v", 403, o.Payload)
}

func (o *PutMaintenanceWindowsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMaintenanceWindowsIDNotFound creates a PutMaintenanceWindowsIDNotFound with default headers values
func NewPutMaintenanceWindowsIDNotFound() *PutMaintenanceWindowsIDNotFound {
	return &PutMaintenanceWindowsIDNotFound{}
}

/*PutMaintenanceWindowsIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type PutMaintenanceWindowsIDNotFound struct {
	Payload *models.Error
}

func (o *PutMaintenanceWindowsIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /maintenance_windows/{id}][%d] putMaintenanceWindowsIdNotFound  %+v", 404, o.Payload)
}

func (o *PutMaintenanceWindowsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMaintenanceWindowsIDTooManyRequests creates a PutMaintenanceWindowsIDTooManyRequests with default headers values
func NewPutMaintenanceWindowsIDTooManyRequests() *PutMaintenanceWindowsIDTooManyRequests {
	return &PutMaintenanceWindowsIDTooManyRequests{}
}

/*PutMaintenanceWindowsIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PutMaintenanceWindowsIDTooManyRequests struct {
	Payload *models.Error
}

func (o *PutMaintenanceWindowsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /maintenance_windows/{id}][%d] putMaintenanceWindowsIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *PutMaintenanceWindowsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
