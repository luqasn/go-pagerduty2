// Code generated by go-swagger; DO NOT EDIT.

package escalation_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// ListEscalationPoliciesReader is a Reader for the ListEscalationPolicies structure.
type ListEscalationPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListEscalationPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListEscalationPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListEscalationPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListEscalationPoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListEscalationPoliciesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewListEscalationPoliciesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListEscalationPoliciesOK creates a ListEscalationPoliciesOK with default headers values
func NewListEscalationPoliciesOK() *ListEscalationPoliciesOK {
	return &ListEscalationPoliciesOK{}
}

/*ListEscalationPoliciesOK handles this case with default header values.

A paginated array of escalation policy objects.
*/
type ListEscalationPoliciesOK struct {
	Payload *models.ListEscalationPoliciesOKBody
}

func (o *ListEscalationPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /escalation_policies][%d] listEscalationPoliciesOK  %+v", 200, o.Payload)
}

func (o *ListEscalationPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListEscalationPoliciesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEscalationPoliciesBadRequest creates a ListEscalationPoliciesBadRequest with default headers values
func NewListEscalationPoliciesBadRequest() *ListEscalationPoliciesBadRequest {
	return &ListEscalationPoliciesBadRequest{}
}

/*ListEscalationPoliciesBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type ListEscalationPoliciesBadRequest struct {
	Payload *models.Error
}

func (o *ListEscalationPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[GET /escalation_policies][%d] listEscalationPoliciesBadRequest  %+v", 400, o.Payload)
}

func (o *ListEscalationPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEscalationPoliciesUnauthorized creates a ListEscalationPoliciesUnauthorized with default headers values
func NewListEscalationPoliciesUnauthorized() *ListEscalationPoliciesUnauthorized {
	return &ListEscalationPoliciesUnauthorized{}
}

/*ListEscalationPoliciesUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type ListEscalationPoliciesUnauthorized struct {
	Payload *models.Error
}

func (o *ListEscalationPoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /escalation_policies][%d] listEscalationPoliciesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListEscalationPoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEscalationPoliciesForbidden creates a ListEscalationPoliciesForbidden with default headers values
func NewListEscalationPoliciesForbidden() *ListEscalationPoliciesForbidden {
	return &ListEscalationPoliciesForbidden{}
}

/*ListEscalationPoliciesForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type ListEscalationPoliciesForbidden struct {
	Payload *models.Error
}

func (o *ListEscalationPoliciesForbidden) Error() string {
	return fmt.Sprintf("[GET /escalation_policies][%d] listEscalationPoliciesForbidden  %+v", 403, o.Payload)
}

func (o *ListEscalationPoliciesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEscalationPoliciesTooManyRequests creates a ListEscalationPoliciesTooManyRequests with default headers values
func NewListEscalationPoliciesTooManyRequests() *ListEscalationPoliciesTooManyRequests {
	return &ListEscalationPoliciesTooManyRequests{}
}

/*ListEscalationPoliciesTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type ListEscalationPoliciesTooManyRequests struct {
	Payload *models.Error
}

func (o *ListEscalationPoliciesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /escalation_policies][%d] listEscalationPoliciesTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListEscalationPoliciesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
