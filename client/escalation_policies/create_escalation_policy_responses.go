// Code generated by go-swagger; DO NOT EDIT.

package escalation_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// CreateEscalationPolicyReader is a Reader for the CreateEscalationPolicy structure.
type CreateEscalationPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateEscalationPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateEscalationPolicyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateEscalationPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateEscalationPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewCreateEscalationPolicyPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateEscalationPolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewCreateEscalationPolicyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateEscalationPolicyCreated creates a CreateEscalationPolicyCreated with default headers values
func NewCreateEscalationPolicyCreated() *CreateEscalationPolicyCreated {
	return &CreateEscalationPolicyCreated{}
}

/*CreateEscalationPolicyCreated handles this case with default header values.

The escalation policy that was created.
*/
type CreateEscalationPolicyCreated struct {
	Payload *models.CreateEscalationPolicyCreatedBody
}

func (o *CreateEscalationPolicyCreated) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] createEscalationPolicyCreated  %+v", 201, o.Payload)
}

func (o *CreateEscalationPolicyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateEscalationPolicyCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEscalationPolicyBadRequest creates a CreateEscalationPolicyBadRequest with default headers values
func NewCreateEscalationPolicyBadRequest() *CreateEscalationPolicyBadRequest {
	return &CreateEscalationPolicyBadRequest{}
}

/*CreateEscalationPolicyBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type CreateEscalationPolicyBadRequest struct {
	Payload *models.Error
}

func (o *CreateEscalationPolicyBadRequest) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] createEscalationPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *CreateEscalationPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEscalationPolicyUnauthorized creates a CreateEscalationPolicyUnauthorized with default headers values
func NewCreateEscalationPolicyUnauthorized() *CreateEscalationPolicyUnauthorized {
	return &CreateEscalationPolicyUnauthorized{}
}

/*CreateEscalationPolicyUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type CreateEscalationPolicyUnauthorized struct {
	Payload *models.Error
}

func (o *CreateEscalationPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] createEscalationPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateEscalationPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEscalationPolicyPaymentRequired creates a CreateEscalationPolicyPaymentRequired with default headers values
func NewCreateEscalationPolicyPaymentRequired() *CreateEscalationPolicyPaymentRequired {
	return &CreateEscalationPolicyPaymentRequired{}
}

/*CreateEscalationPolicyPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type CreateEscalationPolicyPaymentRequired struct {
	Payload *models.Error
}

func (o *CreateEscalationPolicyPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] createEscalationPolicyPaymentRequired  %+v", 402, o.Payload)
}

func (o *CreateEscalationPolicyPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEscalationPolicyForbidden creates a CreateEscalationPolicyForbidden with default headers values
func NewCreateEscalationPolicyForbidden() *CreateEscalationPolicyForbidden {
	return &CreateEscalationPolicyForbidden{}
}

/*CreateEscalationPolicyForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type CreateEscalationPolicyForbidden struct {
	Payload *models.Error
}

func (o *CreateEscalationPolicyForbidden) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] createEscalationPolicyForbidden  %+v", 403, o.Payload)
}

func (o *CreateEscalationPolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEscalationPolicyTooManyRequests creates a CreateEscalationPolicyTooManyRequests with default headers values
func NewCreateEscalationPolicyTooManyRequests() *CreateEscalationPolicyTooManyRequests {
	return &CreateEscalationPolicyTooManyRequests{}
}

/*CreateEscalationPolicyTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type CreateEscalationPolicyTooManyRequests struct {
	Payload *models.Error
}

func (o *CreateEscalationPolicyTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] createEscalationPolicyTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateEscalationPolicyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
