// Code generated by go-swagger; DO NOT EDIT.

package escalation_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// GetEscalationPoliciesReader is a Reader for the GetEscalationPolicies structure.
type GetEscalationPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEscalationPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetEscalationPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetEscalationPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetEscalationPoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetEscalationPoliciesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetEscalationPoliciesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEscalationPoliciesOK creates a GetEscalationPoliciesOK with default headers values
func NewGetEscalationPoliciesOK() *GetEscalationPoliciesOK {
	return &GetEscalationPoliciesOK{}
}

/*GetEscalationPoliciesOK handles this case with default header values.

A paginated array of escalation policy objects.
*/
type GetEscalationPoliciesOK struct {
	Payload *models.GetEscalationPoliciesOKBody
}

func (o *GetEscalationPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /escalation_policies][%d] getEscalationPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetEscalationPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetEscalationPoliciesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEscalationPoliciesBadRequest creates a GetEscalationPoliciesBadRequest with default headers values
func NewGetEscalationPoliciesBadRequest() *GetEscalationPoliciesBadRequest {
	return &GetEscalationPoliciesBadRequest{}
}

/*GetEscalationPoliciesBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type GetEscalationPoliciesBadRequest struct {
	Payload *models.Error
}

func (o *GetEscalationPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[GET /escalation_policies][%d] getEscalationPoliciesBadRequest  %+v", 400, o.Payload)
}

func (o *GetEscalationPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEscalationPoliciesUnauthorized creates a GetEscalationPoliciesUnauthorized with default headers values
func NewGetEscalationPoliciesUnauthorized() *GetEscalationPoliciesUnauthorized {
	return &GetEscalationPoliciesUnauthorized{}
}

/*GetEscalationPoliciesUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type GetEscalationPoliciesUnauthorized struct {
	Payload *models.Error
}

func (o *GetEscalationPoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /escalation_policies][%d] getEscalationPoliciesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEscalationPoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEscalationPoliciesForbidden creates a GetEscalationPoliciesForbidden with default headers values
func NewGetEscalationPoliciesForbidden() *GetEscalationPoliciesForbidden {
	return &GetEscalationPoliciesForbidden{}
}

/*GetEscalationPoliciesForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type GetEscalationPoliciesForbidden struct {
	Payload *models.Error
}

func (o *GetEscalationPoliciesForbidden) Error() string {
	return fmt.Sprintf("[GET /escalation_policies][%d] getEscalationPoliciesForbidden  %+v", 403, o.Payload)
}

func (o *GetEscalationPoliciesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEscalationPoliciesTooManyRequests creates a GetEscalationPoliciesTooManyRequests with default headers values
func NewGetEscalationPoliciesTooManyRequests() *GetEscalationPoliciesTooManyRequests {
	return &GetEscalationPoliciesTooManyRequests{}
}

/*GetEscalationPoliciesTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type GetEscalationPoliciesTooManyRequests struct {
	Payload *models.Error
}

func (o *GetEscalationPoliciesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /escalation_policies][%d] getEscalationPoliciesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetEscalationPoliciesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
