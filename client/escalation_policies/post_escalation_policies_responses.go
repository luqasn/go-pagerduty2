// Code generated by go-swagger; DO NOT EDIT.

package escalation_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PostEscalationPoliciesReader is a Reader for the PostEscalationPolicies structure.
type PostEscalationPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostEscalationPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostEscalationPoliciesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostEscalationPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostEscalationPoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewPostEscalationPoliciesPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostEscalationPoliciesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostEscalationPoliciesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostEscalationPoliciesCreated creates a PostEscalationPoliciesCreated with default headers values
func NewPostEscalationPoliciesCreated() *PostEscalationPoliciesCreated {
	return &PostEscalationPoliciesCreated{}
}

/*PostEscalationPoliciesCreated handles this case with default header values.

The escalation policy that was created.
*/
type PostEscalationPoliciesCreated struct {
	Payload *models.PostEscalationPoliciesCreatedBody
}

func (o *PostEscalationPoliciesCreated) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] postEscalationPoliciesCreated  %+v", 201, o.Payload)
}

func (o *PostEscalationPoliciesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostEscalationPoliciesCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEscalationPoliciesBadRequest creates a PostEscalationPoliciesBadRequest with default headers values
func NewPostEscalationPoliciesBadRequest() *PostEscalationPoliciesBadRequest {
	return &PostEscalationPoliciesBadRequest{}
}

/*PostEscalationPoliciesBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type PostEscalationPoliciesBadRequest struct {
	Payload *models.Error
}

func (o *PostEscalationPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] postEscalationPoliciesBadRequest  %+v", 400, o.Payload)
}

func (o *PostEscalationPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEscalationPoliciesUnauthorized creates a PostEscalationPoliciesUnauthorized with default headers values
func NewPostEscalationPoliciesUnauthorized() *PostEscalationPoliciesUnauthorized {
	return &PostEscalationPoliciesUnauthorized{}
}

/*PostEscalationPoliciesUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PostEscalationPoliciesUnauthorized struct {
	Payload *models.Error
}

func (o *PostEscalationPoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] postEscalationPoliciesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostEscalationPoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEscalationPoliciesPaymentRequired creates a PostEscalationPoliciesPaymentRequired with default headers values
func NewPostEscalationPoliciesPaymentRequired() *PostEscalationPoliciesPaymentRequired {
	return &PostEscalationPoliciesPaymentRequired{}
}

/*PostEscalationPoliciesPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type PostEscalationPoliciesPaymentRequired struct {
	Payload *models.Error
}

func (o *PostEscalationPoliciesPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] postEscalationPoliciesPaymentRequired  %+v", 402, o.Payload)
}

func (o *PostEscalationPoliciesPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEscalationPoliciesForbidden creates a PostEscalationPoliciesForbidden with default headers values
func NewPostEscalationPoliciesForbidden() *PostEscalationPoliciesForbidden {
	return &PostEscalationPoliciesForbidden{}
}

/*PostEscalationPoliciesForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PostEscalationPoliciesForbidden struct {
	Payload *models.Error
}

func (o *PostEscalationPoliciesForbidden) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] postEscalationPoliciesForbidden  %+v", 403, o.Payload)
}

func (o *PostEscalationPoliciesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEscalationPoliciesTooManyRequests creates a PostEscalationPoliciesTooManyRequests with default headers values
func NewPostEscalationPoliciesTooManyRequests() *PostEscalationPoliciesTooManyRequests {
	return &PostEscalationPoliciesTooManyRequests{}
}

/*PostEscalationPoliciesTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PostEscalationPoliciesTooManyRequests struct {
	Payload *models.Error
}

func (o *PostEscalationPoliciesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /escalation_policies][%d] postEscalationPoliciesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostEscalationPoliciesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
