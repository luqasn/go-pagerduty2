// Code generated by go-swagger; DO NOT EDIT.

package escalation_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// UpdateEscalationPolicyReader is a Reader for the UpdateEscalationPolicy structure.
type UpdateEscalationPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEscalationPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateEscalationPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewUpdateEscalationPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewUpdateEscalationPolicyPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateEscalationPolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateEscalationPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewUpdateEscalationPolicyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateEscalationPolicyOK creates a UpdateEscalationPolicyOK with default headers values
func NewUpdateEscalationPolicyOK() *UpdateEscalationPolicyOK {
	return &UpdateEscalationPolicyOK{}
}

/*UpdateEscalationPolicyOK handles this case with default header values.

The escalation policy that was updated.
*/
type UpdateEscalationPolicyOK struct {
	Payload *models.UpdateEscalationPolicyOKBody
}

func (o *UpdateEscalationPolicyOK) Error() string {
	return fmt.Sprintf("[PUT /escalation_policies/{id}][%d] updateEscalationPolicyOK  %+v", 200, o.Payload)
}

func (o *UpdateEscalationPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateEscalationPolicyOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEscalationPolicyUnauthorized creates a UpdateEscalationPolicyUnauthorized with default headers values
func NewUpdateEscalationPolicyUnauthorized() *UpdateEscalationPolicyUnauthorized {
	return &UpdateEscalationPolicyUnauthorized{}
}

/*UpdateEscalationPolicyUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type UpdateEscalationPolicyUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateEscalationPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /escalation_policies/{id}][%d] updateEscalationPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateEscalationPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEscalationPolicyPaymentRequired creates a UpdateEscalationPolicyPaymentRequired with default headers values
func NewUpdateEscalationPolicyPaymentRequired() *UpdateEscalationPolicyPaymentRequired {
	return &UpdateEscalationPolicyPaymentRequired{}
}

/*UpdateEscalationPolicyPaymentRequired handles this case with default header values.

Account does not have the abilities to perform the action. Please review the response for the required abilities.
You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.

*/
type UpdateEscalationPolicyPaymentRequired struct {
	Payload *models.Error
}

func (o *UpdateEscalationPolicyPaymentRequired) Error() string {
	return fmt.Sprintf("[PUT /escalation_policies/{id}][%d] updateEscalationPolicyPaymentRequired  %+v", 402, o.Payload)
}

func (o *UpdateEscalationPolicyPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEscalationPolicyForbidden creates a UpdateEscalationPolicyForbidden with default headers values
func NewUpdateEscalationPolicyForbidden() *UpdateEscalationPolicyForbidden {
	return &UpdateEscalationPolicyForbidden{}
}

/*UpdateEscalationPolicyForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type UpdateEscalationPolicyForbidden struct {
	Payload *models.Error
}

func (o *UpdateEscalationPolicyForbidden) Error() string {
	return fmt.Sprintf("[PUT /escalation_policies/{id}][%d] updateEscalationPolicyForbidden  %+v", 403, o.Payload)
}

func (o *UpdateEscalationPolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEscalationPolicyNotFound creates a UpdateEscalationPolicyNotFound with default headers values
func NewUpdateEscalationPolicyNotFound() *UpdateEscalationPolicyNotFound {
	return &UpdateEscalationPolicyNotFound{}
}

/*UpdateEscalationPolicyNotFound handles this case with default header values.

The requested resource was not found.
*/
type UpdateEscalationPolicyNotFound struct {
	Payload *models.Error
}

func (o *UpdateEscalationPolicyNotFound) Error() string {
	return fmt.Sprintf("[PUT /escalation_policies/{id}][%d] updateEscalationPolicyNotFound  %+v", 404, o.Payload)
}

func (o *UpdateEscalationPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEscalationPolicyTooManyRequests creates a UpdateEscalationPolicyTooManyRequests with default headers values
func NewUpdateEscalationPolicyTooManyRequests() *UpdateEscalationPolicyTooManyRequests {
	return &UpdateEscalationPolicyTooManyRequests{}
}

/*UpdateEscalationPolicyTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type UpdateEscalationPolicyTooManyRequests struct {
	Payload *models.Error
}

func (o *UpdateEscalationPolicyTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /escalation_policies/{id}][%d] updateEscalationPolicyTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateEscalationPolicyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
