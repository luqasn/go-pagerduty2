// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/luqasn/go-pagerduty2/client/abilities"
	"github.com/luqasn/go-pagerduty2/client/add_ons"
	"github.com/luqasn/go-pagerduty2/client/api_reference"
	"github.com/luqasn/go-pagerduty2/client/escalation_policies"
	"github.com/luqasn/go-pagerduty2/client/extension_schemas"
	"github.com/luqasn/go-pagerduty2/client/extensions"
	"github.com/luqasn/go-pagerduty2/client/incidents"
	"github.com/luqasn/go-pagerduty2/client/log_entries"
	"github.com/luqasn/go-pagerduty2/client/maintenance_windows"
	"github.com/luqasn/go-pagerduty2/client/notifications"
	"github.com/luqasn/go-pagerduty2/client/on_calls"
	"github.com/luqasn/go-pagerduty2/client/priorities"
	"github.com/luqasn/go-pagerduty2/client/schedules"
	"github.com/luqasn/go-pagerduty2/client/services"
	"github.com/luqasn/go-pagerduty2/client/teams"
	"github.com/luqasn/go-pagerduty2/client/users"
	"github.com/luqasn/go-pagerduty2/client/vendors"
)

// Default pager duty HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "api.pagerduty.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new pager duty HTTP client.
func NewHTTPClient(formats strfmt.Registry) *PagerDuty {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new pager duty HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *PagerDuty {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new pager duty client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *PagerDuty {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(PagerDuty)
	cli.Transport = transport

	cli.Abilities = abilities.New(transport, formats)

	cli.AddOns = add_ons.New(transport, formats)

	cli.APIReference = api_reference.New(transport, formats)

	cli.EscalationPolicies = escalation_policies.New(transport, formats)

	cli.ExtensionSchemas = extension_schemas.New(transport, formats)

	cli.Extensions = extensions.New(transport, formats)

	cli.Incidents = incidents.New(transport, formats)

	cli.LogEntries = log_entries.New(transport, formats)

	cli.MaintenanceWindows = maintenance_windows.New(transport, formats)

	cli.Notifications = notifications.New(transport, formats)

	cli.OnCalls = on_calls.New(transport, formats)

	cli.Priorities = priorities.New(transport, formats)

	cli.Schedules = schedules.New(transport, formats)

	cli.Services = services.New(transport, formats)

	cli.Teams = teams.New(transport, formats)

	cli.Users = users.New(transport, formats)

	cli.Vendors = vendors.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// PagerDuty is a client for pager duty
type PagerDuty struct {
	Abilities *abilities.Client

	AddOns *add_ons.Client

	APIReference *api_reference.Client

	EscalationPolicies *escalation_policies.Client

	ExtensionSchemas *extension_schemas.Client

	Extensions *extensions.Client

	Incidents *incidents.Client

	LogEntries *log_entries.Client

	MaintenanceWindows *maintenance_windows.Client

	Notifications *notifications.Client

	OnCalls *on_calls.Client

	Priorities *priorities.Client

	Schedules *schedules.Client

	Services *services.Client

	Teams *teams.Client

	Users *users.Client

	Vendors *vendors.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *PagerDuty) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Abilities.SetTransport(transport)

	c.AddOns.SetTransport(transport)

	c.APIReference.SetTransport(transport)

	c.EscalationPolicies.SetTransport(transport)

	c.ExtensionSchemas.SetTransport(transport)

	c.Extensions.SetTransport(transport)

	c.Incidents.SetTransport(transport)

	c.LogEntries.SetTransport(transport)

	c.MaintenanceWindows.SetTransport(transport)

	c.Notifications.SetTransport(transport)

	c.OnCalls.SetTransport(transport)

	c.Priorities.SetTransport(transport)

	c.Schedules.SetTransport(transport)

	c.Services.SetTransport(transport)

	c.Teams.SetTransport(transport)

	c.Users.SetTransport(transport)

	c.Vendors.SetTransport(transport)

}
