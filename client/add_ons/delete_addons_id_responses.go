// Code generated by go-swagger; DO NOT EDIT.

package add_ons

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// DeleteAddonsIDReader is a Reader for the DeleteAddonsID structure.
type DeleteAddonsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAddonsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteAddonsIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteAddonsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteAddonsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteAddonsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteAddonsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAddonsIDNoContent creates a DeleteAddonsIDNoContent with default headers values
func NewDeleteAddonsIDNoContent() *DeleteAddonsIDNoContent {
	return &DeleteAddonsIDNoContent{}
}

/*DeleteAddonsIDNoContent handles this case with default header values.

The add-on was deleted successfully.
*/
type DeleteAddonsIDNoContent struct {
}

func (o *DeleteAddonsIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /addons/{id}][%d] deleteAddonsIdNoContent ", 204)
}

func (o *DeleteAddonsIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAddonsIDUnauthorized creates a DeleteAddonsIDUnauthorized with default headers values
func NewDeleteAddonsIDUnauthorized() *DeleteAddonsIDUnauthorized {
	return &DeleteAddonsIDUnauthorized{}
}

/*DeleteAddonsIDUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type DeleteAddonsIDUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteAddonsIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /addons/{id}][%d] deleteAddonsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAddonsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAddonsIDForbidden creates a DeleteAddonsIDForbidden with default headers values
func NewDeleteAddonsIDForbidden() *DeleteAddonsIDForbidden {
	return &DeleteAddonsIDForbidden{}
}

/*DeleteAddonsIDForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type DeleteAddonsIDForbidden struct {
	Payload *models.Error
}

func (o *DeleteAddonsIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /addons/{id}][%d] deleteAddonsIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAddonsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAddonsIDNotFound creates a DeleteAddonsIDNotFound with default headers values
func NewDeleteAddonsIDNotFound() *DeleteAddonsIDNotFound {
	return &DeleteAddonsIDNotFound{}
}

/*DeleteAddonsIDNotFound handles this case with default header values.

The requested resource was not found.
*/
type DeleteAddonsIDNotFound struct {
	Payload *models.Error
}

func (o *DeleteAddonsIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /addons/{id}][%d] deleteAddonsIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAddonsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAddonsIDTooManyRequests creates a DeleteAddonsIDTooManyRequests with default headers values
func NewDeleteAddonsIDTooManyRequests() *DeleteAddonsIDTooManyRequests {
	return &DeleteAddonsIDTooManyRequests{}
}

/*DeleteAddonsIDTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type DeleteAddonsIDTooManyRequests struct {
	Payload *models.Error
}

func (o *DeleteAddonsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /addons/{id}][%d] deleteAddonsIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteAddonsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
