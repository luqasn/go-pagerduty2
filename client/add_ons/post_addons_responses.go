// Code generated by go-swagger; DO NOT EDIT.

package add_ons

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/luqasn/go-pagerduty2/models"
)

// PostAddonsReader is a Reader for the PostAddons structure.
type PostAddonsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAddonsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostAddonsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostAddonsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostAddonsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostAddonsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostAddonsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostAddonsCreated creates a PostAddonsCreated with default headers values
func NewPostAddonsCreated() *PostAddonsCreated {
	return &PostAddonsCreated{}
}

/*PostAddonsCreated handles this case with default header values.

The add-on that was installed.
*/
type PostAddonsCreated struct {
	Payload *models.PostAddonsCreatedBody
}

func (o *PostAddonsCreated) Error() string {
	return fmt.Sprintf("[POST /addons][%d] postAddonsCreated  %+v", 201, o.Payload)
}

func (o *PostAddonsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostAddonsCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAddonsBadRequest creates a PostAddonsBadRequest with default headers values
func NewPostAddonsBadRequest() *PostAddonsBadRequest {
	return &PostAddonsBadRequest{}
}

/*PostAddonsBadRequest handles this case with default header values.

Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
*/
type PostAddonsBadRequest struct {
	Payload *models.Error
}

func (o *PostAddonsBadRequest) Error() string {
	return fmt.Sprintf("[POST /addons][%d] postAddonsBadRequest  %+v", 400, o.Payload)
}

func (o *PostAddonsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAddonsUnauthorized creates a PostAddonsUnauthorized with default headers values
func NewPostAddonsUnauthorized() *PostAddonsUnauthorized {
	return &PostAddonsUnauthorized{}
}

/*PostAddonsUnauthorized handles this case with default header values.

Caller did not supply credentials or did not provide the correct credentials.
If you are using an API key, it may be invalid or your Authorization header may be malformed.

*/
type PostAddonsUnauthorized struct {
	Payload *models.Error
}

func (o *PostAddonsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /addons][%d] postAddonsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAddonsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAddonsForbidden creates a PostAddonsForbidden with default headers values
func NewPostAddonsForbidden() *PostAddonsForbidden {
	return &PostAddonsForbidden{}
}

/*PostAddonsForbidden handles this case with default header values.

Caller is not authorized to view the requested resource.
While your authentication is valid, the authenticated user or token does not have permission to perform this action.

*/
type PostAddonsForbidden struct {
	Payload *models.Error
}

func (o *PostAddonsForbidden) Error() string {
	return fmt.Sprintf("[POST /addons][%d] postAddonsForbidden  %+v", 403, o.Payload)
}

func (o *PostAddonsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAddonsTooManyRequests creates a PostAddonsTooManyRequests with default headers values
func NewPostAddonsTooManyRequests() *PostAddonsTooManyRequests {
	return &PostAddonsTooManyRequests{}
}

/*PostAddonsTooManyRequests handles this case with default header values.

Too many requests have been made, the rate limit has been reached.
*/
type PostAddonsTooManyRequests struct {
	Payload *models.Error
}

func (o *PostAddonsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /addons][%d] postAddonsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostAddonsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
