// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WeeklyRestrictionAllOf1 weekly restriction all of1
// swagger:model weeklyRestrictionAllOf1
type WeeklyRestrictionAllOf1 struct {

	// The first day of the weekly rotation schedule as [ISO 8601 day](https://en.wikipedia.org/wiki/ISO_week_date) (1 is Monday, etc.)
	// Required: true
	// Maximum: 7
	// Minimum: 1
	StartDayOfWeek *int64 `json:"start_day_of_week"`
}

// Validate validates this weekly restriction all of1
func (m *WeeklyRestrictionAllOf1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStartDayOfWeek(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WeeklyRestrictionAllOf1) validateStartDayOfWeek(formats strfmt.Registry) error {

	if err := validate.Required("start_day_of_week", "body", m.StartDayOfWeek); err != nil {
		return err
	}

	if err := validate.MinimumInt("start_day_of_week", "body", int64(*m.StartDayOfWeek), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("start_day_of_week", "body", int64(*m.StartDayOfWeek), 7, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WeeklyRestrictionAllOf1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WeeklyRestrictionAllOf1) UnmarshalBinary(b []byte) error {
	var res WeeklyRestrictionAllOf1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
