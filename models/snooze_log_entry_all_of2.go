// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"
	"io"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
)

// SnoozeLogEntryAllOf2 snooze log entry all of2
// swagger:model snoozeLogEntryAllOf2
type SnoozeLogEntryAllOf2 struct {
	changedActionsField []IncidentAction
}

// ChangedActions gets the changed actions of this base type
func (m *SnoozeLogEntryAllOf2) ChangedActions() []IncidentAction {
	return m.changedActionsField
}

// SetChangedActions sets the changed actions of this base type
func (m *SnoozeLogEntryAllOf2) SetChangedActions(val []IncidentAction) {
	m.changedActionsField = val
}

// UnmarshalJSON unmarshals this object with a polymorphic type from a JSON structure
func (m *SnoozeLogEntryAllOf2) UnmarshalJSON(raw []byte) error {
	var data struct {
		ChangedActions json.RawMessage `json:"changed_actions,omitempty"`
	}
	buf := bytes.NewBuffer(raw)
	dec := json.NewDecoder(buf)
	dec.UseNumber()

	if err := dec.Decode(&data); err != nil {
		return err
	}

	changedActions, err := UnmarshalIncidentActionSlice(bytes.NewBuffer(data.ChangedActions), runtime.JSONConsumer())
	if err != nil && err != io.EOF {
		return err
	}

	var result SnoozeLogEntryAllOf2

	// changed_actions
	result.changedActionsField = changedActions

	*m = result

	return nil
}

// MarshalJSON marshals this object with a polymorphic type to a JSON structure
func (m SnoozeLogEntryAllOf2) MarshalJSON() ([]byte, error) {
	var b1, b2, b3 []byte
	var err error
	b1, err = json.Marshal(struct {
	}{},
	)
	if err != nil {
		return nil, err
	}
	b2, err = json.Marshal(struct {
		ChangedActions []IncidentAction `json:"changed_actions,omitempty"`
	}{

		ChangedActions: m.changedActionsField,
	},
	)
	if err != nil {
		return nil, err
	}

	return swag.ConcatJSON(b1, b2, b3), nil
}

// Validate validates this snooze log entry all of2
func (m *SnoozeLogEntryAllOf2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChangedActions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SnoozeLogEntryAllOf2) validateChangedActions(formats strfmt.Registry) error {

	if swag.IsZero(m.ChangedActions()) { // not required
		return nil
	}

	for i := 0; i < len(m.ChangedActions()); i++ {

		if err := m.changedActionsField[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("changed_actions" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SnoozeLogEntryAllOf2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SnoozeLogEntryAllOf2) UnmarshalBinary(b []byte) error {
	var res SnoozeLogEntryAllOf2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
